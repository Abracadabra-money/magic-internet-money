{
  "address": "0xa64B73699Cc7334810E382A4C09CAEc53636Ab96",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "_degenBox",
          "type": "address"
        },
        {
          "internalType": "contract IStargatePool",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "_poolId",
          "type": "uint16"
        },
        {
          "internalType": "contract IStargateRouter",
          "name": "_stargateRouter",
          "type": "address"
        },
        {
          "internalType": "contract CurvePool",
          "name": "_curvePool",
          "type": "address"
        },
        {
          "internalType": "int128",
          "name": "_curvePoolI",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_curvePoolJ",
          "type": "int128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "curvePool",
      "outputs": [
        {
          "internalType": "contract CurvePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curvePoolI",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curvePoolJ",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "degenBox",
      "outputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mim",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stargateRouter",
      "outputs": [
        {
          "internalType": "contract IStargateRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareToMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareFrom",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "extraShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingPoolToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x21191b203bb1d75d83a916cb91e0f7752d1d756dbb8349ad45fdc6edbe9694e9",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0xa64B73699Cc7334810E382A4C09CAEc53636Ab96",
    "transactionIndex": 0,
    "gasUsed": "11772190",
    "logsBloom": "0x
    "blockHash": "0x224d5e7100c4e4509179c2d684da8dcbde41b123cef681bc089cc79f6c8d1ca5",
    "transactionHash": "0x21191b203bb1d75d83a916cb91e0f7752d1d756dbb8349ad45fdc6edbe9694e9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 11743848,
        "transactionHash": "0x21191b203bb1d75d83a916cb91e0f7752d1d756dbb8349ad45fdc6edbe9694e9",
        "address": "0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000a64b73699cc7334810e382a4c09caec53636ab96",
          "0x00000000000000000000000030df229cefa463e991e29d42db0bae2e122b2ac7"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 0,
        "blockHash": "0x224d5e7100c4e4509179c2d684da8dcbde41b123cef681bc089cc79f6c8d1ca5"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11743848,
        "transactionHash": "0x21191b203bb1d75d83a916cb91e0f7752d1d756dbb8349ad45fdc6edbe9694e9",
        "address": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000a64b73699cc7334810e382a4c09caec53636ab96",
          "0x00000000000000000000000053bf833a5d6c4dda888f69c22c88c9f356a41614"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 1,
        "blockHash": "0x224d5e7100c4e4509179c2d684da8dcbde41b123cef681bc089cc79f6c8d1ca5"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 11743848,
        "transactionHash": "0x21191b203bb1d75d83a916cb91e0f7752d1d756dbb8349ad45fdc6edbe9694e9",
        "address": "0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000a64b73699cc7334810e382a4c09caec53636ab96",
          "0x00000000000000000000000074c764d41b77dbbb4fe771dab1939b00b146894a"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 2,
        "blockHash": "0x224d5e7100c4e4509179c2d684da8dcbde41b123cef681bc089cc79f6c8d1ca5"
      }
    ],
    "blockNumber": 11743848,
    "cumulativeGasUsed": "3940690",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x74c764D41B77DBbb4fe771daB1939B00b146894A",
    "0xB6CfcF89a7B22988bfC96632aC2A9D6daB60d641",
    2,
    "0x53Bf833A5d6c4ddA888F69c22C88C9f356a41614",
    "0x30dF229cefa463e991e29D42DB0bae2e122B2AC7",
    0,
    2
  ],
  "numDeployments": 1,
  "solcInputHash": "4253906bc6ff185a2720fd2214efbefb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"_degenBox\",\"type\":\"address\"},{\"internalType\":\"contract IStargatePool\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_poolId\",\"type\":\"uint16\"},{\"internalType\":\"contract IStargateRouter\",\"name\":\"_stargateRouter\",\"type\":\"address\"},{\"internalType\":\"contract CurvePool\",\"name\":\"_curvePool\",\"type\":\"address\"},{\"internalType\":\"int128\",\"name\":\"_curvePoolI\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"_curvePoolJ\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"curvePool\",\"outputs\":[{\"internalType\":\"contract CurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curvePoolI\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curvePoolJ\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degenBox\",\"outputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mim\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stargateRouter\",\"outputs\":[{\"internalType\":\"contract IStargateRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareToMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareFrom\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"extraShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareReturned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingPoolToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap(address,uint256,uint256)\":{\"notice\":\"Swaps to a flexible amount, from an exact input amount\"}},\"notice\":\"Leverage Swapper for Stargate LP using Curve\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swappers/Leverage/StargateCurveLevSwapper.sol\":\"StargateCurveLevSwapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":690},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/interfaces/IBentoBoxV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\ninterface IBentoBoxV1 {\\r\\n    function toAmount(\\r\\n        address _token,\\r\\n        uint256 _share,\\r\\n        bool _roundUp\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256, uint256);\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256, uint256);\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable returns (address cloneAddress);\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function totals(IERC20) external view returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function flashLoan(\\r\\n        address borrower,\\r\\n        address receiver,\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n}\\r\\n\",\"keccak256\":\"0xf654f9181ff602627dd70c0c65999488b3a28d6941386231351f38bc9eb7f8fb\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /// @notice EIP 2612\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x33e3d42a9bc583e9d2732a4c71bddebd883199abe927faef674c60463a459730\",\"license\":\"MIT\"},\"contracts/interfaces/ILevSwapperGeneric.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface ILevSwapperGeneric {\\r\\n    /// @notice Swaps to a flexible amount, from an exact input amount\\r\\n    function swap(\\r\\n        address recipient,\\r\\n        uint256 shareToMin,\\r\\n        uint256 shareFrom\\r\\n    ) external returns (uint256 extraShare, uint256 shareReturned);\\r\\n}\\r\\n\",\"keccak256\":\"0x9412c47adeb7f02484cc03a0167ad3da2364b0c659c45a918941f61572d98d78\",\"license\":\"MIT\"},\"contracts/interfaces/curve/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// solhint-disable func-name-mixedcase, var-name-mixedcase\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface CurvePool {\\r\\n    function coins(uint256 i) external view returns (address);\\r\\n\\r\\n    function exchange_underlying(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function exchange(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function exchange(\\r\\n        uint256 i,\\r\\n        uint256 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function get_dy_underlying(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function get_dy(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) external returns (bool);\\r\\n\\r\\n    function add_liquidity(uint256[2] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function add_liquidity(uint256[3] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function add_liquidity(uint256[4] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        int128 i,\\r\\n        uint256 min_amount\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        uint256 i,\\r\\n        uint256 min_amount\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        int128 i,\\r\\n        uint256 min_amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x22260ed5207ce81d1bfc5f97685d1859f034861ffb22adfed2f176ab05bb6a61\",\"license\":\"MIT\"},\"contracts/interfaces/stargate/IStargatePool.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IStargatePool {\\r\\n    function totalLiquidity() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function decimals() external view returns (uint256);\\r\\n\\r\\n    function localDecimals() external view returns (uint256);\\r\\n\\r\\n    function token() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x3ca69b22d4623073f0f4590889019cac56c9ca0c8663bf9c58cfba3e44aac0e1\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/stargate/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n// solhint-disable contract-name-camelcase\\r\\n\\r\\npragma solidity >=0.7.6;\\r\\npragma abicoder v2;\\r\\n\\r\\ninterface IStargateRouter {\\r\\n    struct lzTxObj {\\r\\n        uint256 dstGasForCall;\\r\\n        uint256 dstNativeAmount;\\r\\n        bytes dstNativeAddr;\\r\\n    }\\r\\n\\r\\n    function addLiquidity(\\r\\n        uint256 _poolId,\\r\\n        uint256 _amountLD,\\r\\n        address _to\\r\\n    ) external;\\r\\n\\r\\n    function swap(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLD,\\r\\n        uint256 _minAmountLD,\\r\\n        lzTxObj memory _lzTxParams,\\r\\n        bytes calldata _to,\\r\\n        bytes calldata _payload\\r\\n    ) external payable;\\r\\n\\r\\n    function redeemRemote(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        uint256 _minAmountLD,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function instantRedeemLocal(\\r\\n        uint16 _srcPoolId,\\r\\n        uint256 _amountLP,\\r\\n        address _to\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function redeemLocal(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendCredits(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _functionType,\\r\\n        bytes calldata _toAddress,\\r\\n        bytes calldata _transferAndCallPayload,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256, uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x5caa470f6ffb1935cf48357f65f1f2fa79cf6f54f46c335f3f97a3b0f8ea1b91\",\"license\":\"BUSL-1.1\"},\"contracts/swappers/Leverage/StargateCurveLevSwapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"../../interfaces/ILevSwapperGeneric.sol\\\";\\r\\nimport \\\"../../interfaces/IBentoBoxV1.sol\\\";\\r\\nimport \\\"../../interfaces/IERC20.sol\\\";\\r\\nimport \\\"../../interfaces/curve/ICurvePool.sol\\\";\\r\\nimport \\\"../../interfaces/stargate/IStargateRouter.sol\\\";\\r\\nimport \\\"../../interfaces/stargate/IStargatePool.sol\\\";\\r\\n\\r\\n/// @notice Leverage Swapper for Stargate LP using Curve\\r\\ncontract StargateCurveLevSwapper is ILevSwapperGeneric {\\r\\n    using Address for address;\\r\\n\\r\\n    IBentoBoxV1 public immutable degenBox;\\r\\n    IStargatePool public immutable pool;\\r\\n    IStargateRouter public immutable stargateRouter;\\r\\n    CurvePool public immutable curvePool;\\r\\n    int128 public immutable curvePoolI;\\r\\n    int128 public immutable curvePoolJ;\\r\\n    uint256 public immutable poolId;\\r\\n    IERC20 public immutable underlyingPoolToken;\\r\\n    IERC20 public immutable mim;\\r\\n\\r\\n    constructor(\\r\\n        IBentoBoxV1 _degenBox,\\r\\n        IStargatePool _pool,\\r\\n        uint16 _poolId,\\r\\n        IStargateRouter _stargateRouter,\\r\\n        CurvePool _curvePool,\\r\\n        int128 _curvePoolI,\\r\\n        int128 _curvePoolJ\\r\\n    ) {\\r\\n        degenBox = _degenBox;\\r\\n        pool = _pool;\\r\\n        poolId = _poolId;\\r\\n        stargateRouter = _stargateRouter;\\r\\n        curvePool = _curvePool;\\r\\n        curvePoolI = _curvePoolI;\\r\\n        curvePoolJ = _curvePoolJ;\\r\\n        mim = IERC20(_curvePool.coins(uint128(_curvePoolI)));\\r\\n        underlyingPoolToken = IERC20(_pool.token());\\r\\n\\r\\n        mim.approve(address(_curvePool), type(uint256).max);\\r\\n        _safeApprove(underlyingPoolToken, address(_stargateRouter), type(uint256).max);\\r\\n        IERC20(address(pool)).approve(address(_degenBox), type(uint256).max);\\r\\n    }\\r\\n\\r\\n    // Swaps to a flexible amount, from an exact input amount\\r\\n    function swap(\\r\\n        address recipient,\\r\\n        uint256 shareToMin,\\r\\n        uint256 shareFrom\\r\\n    ) public override returns (uint256 extraShare, uint256 shareReturned) {\\r\\n        (uint256 amount, ) = degenBox.withdraw(mim, address(this), address(this), 0, shareFrom);\\r\\n\\r\\n        // MIM -> Stargate Pool Underlying Token\\r\\n        amount = curvePool.exchange_underlying(curvePoolI, curvePoolJ, amount, 0, address(this));\\r\\n\\r\\n        // Underlying Token -> Stargate Pool LP\\r\\n        stargateRouter.addLiquidity(poolId, amount, address(this));\\r\\n        amount = IERC20(address(pool)).balanceOf(address(this));\\r\\n\\r\\n        (, shareReturned) = degenBox.deposit(IERC20(address(pool)), address(this), recipient, amount, 0);\\r\\n        extraShare = shareReturned - shareToMin;\\r\\n    }\\r\\n\\r\\n    /// @dev copied from @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol to avoid IERC20 naming conflict\\r\\n    function _safeApprove(\\r\\n        IERC20 token,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) private {\\r\\n        // solhint-disable-next-line reason-string\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0), \\\"SafeERC20: approve from non-zero to non-zero allowance\\\");\\r\\n\\r\\n        bytes memory returndata = address(token).functionCall(\\r\\n            abi.encodeWithSelector(token.approve.selector, spender, value),\\r\\n            \\\"SafeERC20: low-level call failed\\\"\\r\\n        );\\r\\n        if (returndata.length > 0) {\\r\\n            // Return data is optional\\r\\n            // solhint-disable-next-line reason-string\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x15ed477565249aa4ec7dcf567e2d0b01168c54fbb09a4aa8de28427503c95e08\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101a06040523480156200001257600080fd5b50604051620011c8380380620011c883398101604081905262000035916200064e565b6001600160a01b0387811660805286811660a05261ffff86166101405284811660c052831660e0819052600f83810b6101005282900b6101205260405163c661065760e01b81526001600160801b038416600482015263c661065790602401602060405180830381865afa158015620000b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d89190620006f7565b6001600160a01b0316610180816001600160a01b031681525050856001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001579190620006f7565b6001600160a01b03908116610160526101805160405163095ea7b360e01b81528583166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620001b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d9919062000717565b5061016051620001ed908560001962000276565b60a05160405163095ea7b360e01b81526001600160a01b03898116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af115801562000242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000268919062000717565b5050505050505050620007d7565b801580620002f45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620002cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f291906200073b565b155b6200036c5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663095ea7b360e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564848201526000936200040093928816929162000488811b6200065b17901c565b80519091501562000482578080602001905181019062000421919062000717565b620004825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840162000363565b50505050565b6060620004998484600085620004a3565b90505b9392505050565b606082471015620005065760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840162000363565b6001600160a01b0385163b6200055f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000363565b600080866001600160a01b031685876040516200057d919062000784565b60006040518083038185875af1925050503d8060008114620005bc576040519150601f19603f3d011682016040523d82523d6000602084013e620005c1565b606091505b509092509050620005d4828286620005df565b979650505050505050565b60608315620005f05750816200049c565b825115620006015782518084602001fd5b8160405162461bcd60e51b8152600401620003639190620007a2565b6001600160a01b03811681146200063357600080fd5b50565b8051600f81900b81146200064957600080fd5b919050565b600080600080600080600060e0888a0312156200066a57600080fd5b875162000677816200061d565b60208901519097506200068a816200061d565b604089015190965061ffff81168114620006a357600080fd5b6060890151909550620006b6816200061d565b6080890151909450620006c9816200061d565b9250620006d960a0890162000636565b9150620006e960c0890162000636565b905092959891949750929550565b6000602082840312156200070a57600080fd5b81516200049c816200061d565b6000602082840312156200072a57600080fd5b815180151581146200049c57600080fd5b6000602082840312156200074e57600080fd5b5051919050565b60005b838110156200077257818101518382015260200162000758565b83811115620004825750506000910152565b600082516200079881846020870162000755565b9190910192915050565b6020815260008251806020840152620007c381604085016020870162000755565b601f01601f19169190910160400192915050565b60805160a05160c05160e051610100516101205161014051610160516101805161093b6200088d6000396000818161023f015261029f015260006101c901526000818161016d01526104550152600081816101a2015261039201526000818160c8015261036701526000818161014601526103d1015260008181610266015261048b01526000818161010701528181610502015261058d015260008181610218015281816102e901526105d4015261093b6000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639dd6126e116100765780639f495c151161005b5780639f495c15146102135780639f67679e1461023a578063a9e56f3c1461026157600080fd5b80639dd6126e146101c45780639f1d0f59146101eb57600080fd5b8063218751b2116100a7578063218751b2146101415780633e0dc34e146101685780637c3e13e31461019d57600080fd5b806307a65882146100c357806316f0115b14610102575b600080fd5b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b604051600f9190910b81526020015b60405180910390f35b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f9565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f9565b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101fe6101f93660046107e3565b610288565b604080519283526020830191909152016100f9565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b60405163097da6d360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152306024830181905260448301526000606483018190526084830184905291829182917f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a40160408051808303816000875af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103579190610824565b506040516322770cc360e11b81527f0000000000000000000000000000000000000000000000000000000000000000600f90810b60048301527f0000000000000000000000000000000000000000000000000000000000000000900b602482015260448101829052600060648201523060848201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906344ee19869060a4016020604051808303816000875af1158015610422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104469190610848565b6040516321ec87bf60e21b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290523060448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906387b21efc90606401600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105779190610848565b60405162ae511b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152306024830152888116604483015260648201839052600060848301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906302b9446c9060a40160408051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610824565b925061065090508583610861565b925050935093915050565b606061066a8484600085610674565b90505b9392505050565b6060824710156106da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6107315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106d1565b600080866001600160a01b0316858760405161074d91906108b6565b60006040518083038185875af1925050503d806000811461078a576040519150601f19603f3d011682016040523d82523d6000602084013e61078f565b606091505b509150915061079f8282866107aa565b979650505050505050565b606083156107b957508161066d565b8251156107c95782518084602001fd5b8160405162461bcd60e51b81526004016106d191906108d2565b6000806000606084860312156107f857600080fd5b83356001600160a01b038116811461080f57600080fd5b95602085013595506040909401359392505050565b6000806040838503121561083757600080fd5b505080516020909101519092909150565b60006020828403121561085a57600080fd5b5051919050565b60008282101561088157634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156108a1578181015183820152602001610889565b838111156108b0576000848401525b50505050565b600082516108c8818460208701610886565b9190910192915050565b60208152600082518060208401526108f1816040850160208701610886565b601f01601f1916919091016040019291505056fea2646970667358221220eca5a9a68635afbfcc1eb4872a9a2648275bb8c8187a9762011ee96924ce66d264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c80639dd6126e116100765780639f495c151161005b5780639f495c15146102135780639f67679e1461023a578063a9e56f3c1461026157600080fd5b80639dd6126e146101c45780639f1d0f59146101eb57600080fd5b8063218751b2116100a7578063218751b2146101415780633e0dc34e146101685780637c3e13e31461019d57600080fd5b806307a65882146100c357806316f0115b14610102575b600080fd5b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b604051600f9190910b81526020015b60405180910390f35b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f9565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f9565b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101fe6101f93660046107e3565b610288565b604080519283526020830191909152016100f9565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b6101297f000000000000000000000000000000000000000000000000000000000000000081565b60405163097da6d360e41b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152306024830181905260448301526000606483018190526084830184905291829182917f0000000000000000000000000000000000000000000000000000000000000000909116906397da6d309060a40160408051808303816000875af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103579190610824565b506040516322770cc360e11b81527f0000000000000000000000000000000000000000000000000000000000000000600f90810b60048301527f0000000000000000000000000000000000000000000000000000000000000000900b602482015260448101829052600060648201523060848201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906344ee19869060a4016020604051808303816000875af1158015610422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104469190610848565b6040516321ec87bf60e21b81527f00000000000000000000000000000000000000000000000000000000000000006004820152602481018290523060448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906387b21efc90606401600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506370a082319150602401602060405180830381865afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105779190610848565b60405162ae511b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152306024830152888116604483015260648201839052600060848301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906302b9446c9060a40160408051808303816000875af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610824565b925061065090508583610861565b925050935093915050565b606061066a8484600085610674565b90505b9392505050565b6060824710156106da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084015b60405180910390fd5b6001600160a01b0385163b6107315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106d1565b600080866001600160a01b0316858760405161074d91906108b6565b60006040518083038185875af1925050503d806000811461078a576040519150601f19603f3d011682016040523d82523d6000602084013e61078f565b606091505b509150915061079f8282866107aa565b979650505050505050565b606083156107b957508161066d565b8251156107c95782518084602001fd5b8160405162461bcd60e51b81526004016106d191906108d2565b6000806000606084860312156107f857600080fd5b83356001600160a01b038116811461080f57600080fd5b95602085013595506040909401359392505050565b6000806040838503121561083757600080fd5b505080516020909101519092909150565b60006020828403121561085a57600080fd5b5051919050565b60008282101561088157634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156108a1578181015183820152602001610889565b838111156108b0576000848401525b50505050565b600082516108c8818460208701610886565b9190910192915050565b60208152600082518060208401526108f1816040850160208701610886565b601f01601f1916919091016040019291505056fea2646970667358221220eca5a9a68635afbfcc1eb4872a9a2648275bb8c8187a9762011ee96924ce66d264736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swap(address,uint256,uint256)": {
        "notice": "Swaps to a flexible amount, from an exact input amount"
      }
    },
    "notice": "Leverage Swapper for Stargate LP using Curve",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}