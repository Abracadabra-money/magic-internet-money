{
  "address": "0xd15f851A912e4Fa9947e6024f16f02Ef25Ff311B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "pair_",
          "type": "address"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "tokenOracle_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WAD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pair",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0Decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1Decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenOracle",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2959f97d876dea2ced4ba1ed585f0c73f71d6fb06a0b89936a8267f8dbaf7fa0",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0xd15f851A912e4Fa9947e6024f16f02Ef25Ff311B",
    "transactionIndex": 6,
    "gasUsed": "856130",
    "logsBloom": "0x
    "blockHash": "0x56563e27b0e378f018bbcc1ff7117523e6cfad2182494484a870f31cfd8f6448",
    "transactionHash": "0x2959f97d876dea2ced4ba1ed585f0c73f71d6fb06a0b89936a8267f8dbaf7fa0",
    "logs": [],
    "blockNumber": 6877709,
    "cumulativeGasUsed": "2062779",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xeD8CBD9F0cE3C6986b22002F03c6475CEb7a6256",
    "0xD43f26102b0671dCf8D6357aA2908D6cC80C0559"
  ],
  "solcInputHash": "ed832352595a0cfff36da2418e10fcc5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"pair_\",\"type\":\"address\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"tokenOracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenOracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BoringCrypto, 0xCalibur\",\"details\":\"Optimized version based on https://blog.alphafinance.io/fair-lp-token-pricing/\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"pair_\":\"The UniswapV2 compatible pair address\",\"tokenOracle_\":\"The token price 1 lp should be denominated with.\"}},\"latestAnswer()\":{\"returns\":{\"_0\":\"the price of 1 lp in token price Exemple: - For 1 AVAX = $82 - Total LP Value is: $160,000,000 - LP supply is 8.25 - latestAnswer() returns 234420638348190662349201 / 1e18 = 234420.63 AVAX - 1 LP = 234420.63 AVAX => 234420.63 * 8.25 * 82 = \\u2248$160,000,000\"}}},\"title\":\"LPChainlinkOracleV1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"latestAnswer()\":{\"notice\":\"Calculates the lastest exchange rate\"}},\"notice\":\"Oracle used for getting the price of an LP token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/LPChainlinkOracle.sol\":\"LPChainlinkOracleV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/oracles/LPChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IAggregator {\\r\\n    function latestAnswer() external view returns (int256 answer);\\r\\n}\\r\\n\\r\\ninterface AggregatorV3Interface {\\r\\n  function decimals() external view returns (uint8);\\r\\n  function latestRoundData()\\r\\n    external\\r\\n    view\\r\\n    returns (\\r\\n      uint80 roundId,\\r\\n      int256 answer,\\r\\n      uint256 startedAt,\\r\\n      uint256 updatedAt,\\r\\n      uint80 answeredInRound\\r\\n    );\\r\\n}\\r\\n\\r\\ninterface IERC20 {\\r\\n    function decimals() external pure returns (uint8);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n}\\r\\n\\r\\n/// @title LPChainlinkOracleV1\\r\\n/// @author BoringCrypto, 0xCalibur\\r\\n/// @notice Oracle used for getting the price of an LP token\\r\\n/// @dev Optimized version based on https://blog.alphafinance.io/fair-lp-token-pricing/\\r\\ncontract LPChainlinkOracleV1 is IAggregator {\\r\\n    IUniswapV2Pair public immutable pair;\\r\\n    AggregatorV3Interface public immutable tokenOracle;\\r\\n    uint8 public immutable token0Decimals;\\r\\n    uint8 public immutable token1Decimals;\\r\\n    uint8 public immutable oracleDecimals;\\r\\n\\r\\n    uint256 public constant WAD = 18;\\r\\n\\r\\n    /// @param pair_ The UniswapV2 compatible pair address\\r\\n    /// @param tokenOracle_ The token price 1 lp should be denominated with.\\r\\n    constructor(IUniswapV2Pair pair_, AggregatorV3Interface tokenOracle_) {\\r\\n        pair = pair_;\\r\\n        tokenOracle = tokenOracle_;\\r\\n\\r\\n        token0Decimals = IERC20(pair_.token0()).decimals();\\r\\n        token1Decimals = IERC20(pair_.token1()).decimals();\\r\\n\\r\\n        oracleDecimals = tokenOracle_.decimals();\\r\\n    }\\r\\n\\r\\n    // credit for this implementation goes to\\r\\n    // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol\\r\\n    function sqrt(uint256 x) internal pure returns (uint128) {\\r\\n        if (x == 0) return 0;\\r\\n        uint256 xx = x;\\r\\n        uint256 r = 1;\\r\\n        if (xx >= 0x100000000000000000000000000000000) {\\r\\n            xx >>= 128;\\r\\n            r <<= 64;\\r\\n        }\\r\\n        if (xx >= 0x10000000000000000) {\\r\\n            xx >>= 64;\\r\\n            r <<= 32;\\r\\n        }\\r\\n        if (xx >= 0x100000000) {\\r\\n            xx >>= 32;\\r\\n            r <<= 16;\\r\\n        }\\r\\n        if (xx >= 0x10000) {\\r\\n            xx >>= 16;\\r\\n            r <<= 8;\\r\\n        }\\r\\n        if (xx >= 0x100) {\\r\\n            xx >>= 8;\\r\\n            r <<= 4;\\r\\n        }\\r\\n        if (xx >= 0x10) {\\r\\n            xx >>= 4;\\r\\n            r <<= 2;\\r\\n        }\\r\\n        if (xx >= 0x8) {\\r\\n            r <<= 1;\\r\\n        }\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1; // Seven iterations should be enough\\r\\n        uint256 r1 = x / r;\\r\\n        return uint128(r < r1 ? r : r1);\\r\\n    }\\r\\n\\r\\n    /// Calculates the lastest exchange rate\\r\\n    /// @return the price of 1 lp in token price\\r\\n    /// Exemple:\\r\\n    /// - For 1 AVAX = $82\\r\\n    /// - Total LP Value is: $160,000,000\\r\\n    /// - LP supply is 8.25\\r\\n    /// - latestAnswer() returns 234420638348190662349201 / 1e18 = 234420.63 AVAX\\r\\n    /// - 1 LP = 234420.63 AVAX => 234420.63 * 8.25 * 82 = \\u2248$160,000,000\\r\\n    function latestAnswer() external view override returns (int256) {\\r\\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(pair).getReserves();\\r\\n        uint256 totalSupply = pair.totalSupply();\\r\\n\\r\\n        uint256 normalizedReserve0 = reserve0 * (10**(WAD - token0Decimals));\\r\\n        uint256 normalizedReserve1 = reserve1 * (10**(WAD - token1Decimals));\\r\\n    \\r\\n        uint256 k = normalizedReserve0 * normalizedReserve1;\\r\\n        (,int256 priceFeed,,,) = tokenOracle.latestRoundData();\\r\\n        \\r\\n        uint256 normalizedPriceFeed = uint256(priceFeed) * (10**(WAD - oracleDecimals));\\r\\n\\r\\n        uint256 totalValue = uint256(sqrt((k / 1e18) * normalizedPriceFeed)) * 2;\\r\\n        return int256((totalValue * 1e18) / totalSupply);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4d95503a8f7b09082be73d52766ac985f2db19da20ccb8b3c4c39f9a0ace8788\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b506040516200132f3803806200132f8339818101604052810190620000389190620003cb565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000112919062000443565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001839190620004b3565b60ff1660c08160ff16815250508173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000202919062000443565b73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200024d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002739190620004b3565b60ff1660e08160ff16815250508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f29190620004b3565b60ff166101008160ff16815250505050620004e5565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200033a826200030d565b9050919050565b60006200034e826200032d565b9050919050565b620003608162000341565b81146200036c57600080fd5b50565b600081519050620003808162000355565b92915050565b600062000393826200032d565b9050919050565b620003a58162000386565b8114620003b157600080fd5b50565b600081519050620003c5816200039a565b92915050565b60008060408385031215620003e557620003e462000308565b5b6000620003f5858286016200036f565b92505060206200040885828601620003b4565b9150509250929050565b6200041d816200032d565b81146200042957600080fd5b50565b6000815190506200043d8162000412565b92915050565b6000602082840312156200045c576200045b62000308565b5b60006200046c848285016200042c565b91505092915050565b600060ff82169050919050565b6200048d8162000475565b81146200049957600080fd5b50565b600081519050620004ad8162000482565b92915050565b600060208284031215620004cc57620004cb62000308565b5b6000620004dc848285016200049c565b91505092915050565b60805160a05160c05160e05161010051610ddb6200055460003960008181610405015261053501526000818161015601526103130152600081816102c8015261051101526000818161036e01526104c901526000818161017f0152818161023501526104ed0152610ddb6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c5ec25c1161005b5780636c5ec25c146100dc578063a8aa1b31146100fa578063b31ac6e214610118578063e68b52e7146101365761007d565b80630b77884d1461008257806350d25bcd146100a05780636a146024146100be575b600080fd5b61008a610154565b604051610097919061073f565b60405180910390f35b6100a8610178565b6040516100b59190610773565b60405180910390f35b6100c66104c2565b6040516100d391906107a7565b60405180910390f35b6100e46104c7565b6040516100f19190610841565b60405180910390f35b6101026104eb565b60405161010f919061087d565b60405180910390f35b61012061050f565b60405161012d919061073f565b60405180910390f35b61013e610533565b60405161014b919061073f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c919061091f565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c2919061099e565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff1660126102f691906109fa565b600a6103029190610b61565b8461030d9190610bac565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff16601261034191906109fa565b600a61034d9190610b61565b846103589190610bac565b9050600081836103689190610bac565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610c74565b50505091505060007f000000000000000000000000000000000000000000000000000000000000000060ff16601261043391906109fa565b600a61043f9190610b61565b8261044a9190610bac565b90506000600261047783670de0b6b3a7640000876104689190610d1e565b6104729190610bac565b610557565b6fffffffffffffffffffffffffffffffff166104939190610bac565b905086670de0b6b3a7640000826104aa9190610bac565b6104b49190610d1e565b995050505050505050505090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008082141561056a576000905061071e565b6000829050600060019050700100000000000000000000000000000000821061059c57608082901c9150604081901b90505b6801000000000000000082106105bb57604082901c9150602081901b90505b64010000000082106105d657602082901c9150601081901b90505b6201000082106105ef57601082901c9150600881901b90505b610100821061060757600882901c9150600481901b90505b6010821061061e57600482901c9150600281901b90505b6008821061062e57600181901b90505b6001818561063c9190610d1e565b826106479190610d4f565b901c9050600181856106599190610d1e565b826106649190610d4f565b901c9050600181856106769190610d1e565b826106819190610d4f565b901c9050600181856106939190610d1e565b8261069e9190610d4f565b901c9050600181856106b09190610d1e565b826106bb9190610d4f565b901c9050600181856106cd9190610d1e565b826106d89190610d4f565b901c9050600181856106ea9190610d1e565b826106f59190610d4f565b901c9050600081856107079190610d1e565b90508082106107165780610718565b815b93505050505b919050565b600060ff82169050919050565b61073981610723565b82525050565b60006020820190506107546000830184610730565b92915050565b6000819050919050565b61076d8161075a565b82525050565b60006020820190506107886000830184610764565b92915050565b6000819050919050565b6107a18161078e565b82525050565b60006020820190506107bc6000830184610798565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108076108026107fd846107c2565b6107e2565b6107c2565b9050919050565b6000610819826107ec565b9050919050565b600061082b8261080e565b9050919050565b61083b81610820565b82525050565b60006020820190506108566000830184610832565b92915050565b60006108678261080e565b9050919050565b6108778161085c565b82525050565b6000602082019050610892600083018461086e565b92915050565b600080fd5b60006dffffffffffffffffffffffffffff82169050919050565b6108c08161089d565b81146108cb57600080fd5b50565b6000815190506108dd816108b7565b92915050565b600063ffffffff82169050919050565b6108fc816108e3565b811461090757600080fd5b50565b600081519050610919816108f3565b92915050565b60008060006060848603121561093857610937610898565b5b6000610946868287016108ce565b9350506020610957868287016108ce565b92505060406109688682870161090a565b9150509250925092565b61097b8161078e565b811461098657600080fd5b50565b60008151905061099881610972565b92915050565b6000602082840312156109b4576109b3610898565b5b60006109c284828501610989565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a058261078e565b9150610a108361078e565b925082821015610a2357610a226109cb565b5b828203905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610a8557808604811115610a6157610a606109cb565b5b6001851615610a705780820291505b8081029050610a7e85610a2e565b9450610a45565b94509492505050565b600082610a9e5760019050610b5a565b81610aac5760009050610b5a565b8160018114610ac25760028114610acc57610afb565b6001915050610b5a565b60ff841115610ade57610add6109cb565b5b8360020a915084821115610af557610af46109cb565b5b50610b5a565b5060208310610133831016604e8410600b8410161715610b305782820a905083811115610b2b57610b2a6109cb565b5b610b5a565b610b3d8484846001610a3b565b92509050818404811115610b5457610b536109cb565b5b81810290505b9392505050565b6000610b6c8261078e565b9150610b778361078e565b9250610ba47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a8e565b905092915050565b6000610bb78261078e565b9150610bc28361078e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfb57610bfa6109cb565b5b828202905092915050565b600069ffffffffffffffffffff82169050919050565b610c2581610c06565b8114610c3057600080fd5b50565b600081519050610c4281610c1c565b92915050565b610c518161075a565b8114610c5c57600080fd5b50565b600081519050610c6e81610c48565b92915050565b600080600080600060a08688031215610c9057610c8f610898565b5b6000610c9e88828901610c33565b9550506020610caf88828901610c5f565b9450506040610cc088828901610989565b9350506060610cd188828901610989565b9250506080610ce288828901610c33565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d298261078e565b9150610d348361078e565b925082610d4457610d43610cef565b5b828204905092915050565b6000610d5a8261078e565b9150610d658361078e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9a57610d996109cb565b5b82820190509291505056fea26469706673582212205cb928fb02b987a5a99f293537b0dc7f2c9c3d4ef0beb0d17dac3bd01b433b0464736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80636c5ec25c1161005b5780636c5ec25c146100dc578063a8aa1b31146100fa578063b31ac6e214610118578063e68b52e7146101365761007d565b80630b77884d1461008257806350d25bcd146100a05780636a146024146100be575b600080fd5b61008a610154565b604051610097919061073f565b60405180910390f35b6100a8610178565b6040516100b59190610773565b60405180910390f35b6100c66104c2565b6040516100d391906107a7565b60405180910390f35b6100e46104c7565b6040516100f19190610841565b60405180910390f35b6101026104eb565b60405161010f919061087d565b60405180910390f35b61012061050f565b60405161012d919061073f565b60405180910390f35b61013e610533565b60405161014b919061073f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c919061091f565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c2919061099e565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff1660126102f691906109fa565b600a6103029190610b61565b8461030d9190610bac565b905060007f000000000000000000000000000000000000000000000000000000000000000060ff16601261034191906109fa565b600a61034d9190610b61565b846103589190610bac565b9050600081836103689190610bac565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610c74565b50505091505060007f000000000000000000000000000000000000000000000000000000000000000060ff16601261043391906109fa565b600a61043f9190610b61565b8261044a9190610bac565b90506000600261047783670de0b6b3a7640000876104689190610d1e565b6104729190610bac565b610557565b6fffffffffffffffffffffffffffffffff166104939190610bac565b905086670de0b6b3a7640000826104aa9190610bac565b6104b49190610d1e565b995050505050505050505090565b601281565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008082141561056a576000905061071e565b6000829050600060019050700100000000000000000000000000000000821061059c57608082901c9150604081901b90505b6801000000000000000082106105bb57604082901c9150602081901b90505b64010000000082106105d657602082901c9150601081901b90505b6201000082106105ef57601082901c9150600881901b90505b610100821061060757600882901c9150600481901b90505b6010821061061e57600482901c9150600281901b90505b6008821061062e57600181901b90505b6001818561063c9190610d1e565b826106479190610d4f565b901c9050600181856106599190610d1e565b826106649190610d4f565b901c9050600181856106769190610d1e565b826106819190610d4f565b901c9050600181856106939190610d1e565b8261069e9190610d4f565b901c9050600181856106b09190610d1e565b826106bb9190610d4f565b901c9050600181856106cd9190610d1e565b826106d89190610d4f565b901c9050600181856106ea9190610d1e565b826106f59190610d4f565b901c9050600081856107079190610d1e565b90508082106107165780610718565b815b93505050505b919050565b600060ff82169050919050565b61073981610723565b82525050565b60006020820190506107546000830184610730565b92915050565b6000819050919050565b61076d8161075a565b82525050565b60006020820190506107886000830184610764565b92915050565b6000819050919050565b6107a18161078e565b82525050565b60006020820190506107bc6000830184610798565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108076108026107fd846107c2565b6107e2565b6107c2565b9050919050565b6000610819826107ec565b9050919050565b600061082b8261080e565b9050919050565b61083b81610820565b82525050565b60006020820190506108566000830184610832565b92915050565b60006108678261080e565b9050919050565b6108778161085c565b82525050565b6000602082019050610892600083018461086e565b92915050565b600080fd5b60006dffffffffffffffffffffffffffff82169050919050565b6108c08161089d565b81146108cb57600080fd5b50565b6000815190506108dd816108b7565b92915050565b600063ffffffff82169050919050565b6108fc816108e3565b811461090757600080fd5b50565b600081519050610919816108f3565b92915050565b60008060006060848603121561093857610937610898565b5b6000610946868287016108ce565b9350506020610957868287016108ce565b92505060406109688682870161090a565b9150509250925092565b61097b8161078e565b811461098657600080fd5b50565b60008151905061099881610972565b92915050565b6000602082840312156109b4576109b3610898565b5b60006109c284828501610989565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a058261078e565b9150610a108361078e565b925082821015610a2357610a226109cb565b5b828203905092915050565b60008160011c9050919050565b6000808291508390505b6001851115610a8557808604811115610a6157610a606109cb565b5b6001851615610a705780820291505b8081029050610a7e85610a2e565b9450610a45565b94509492505050565b600082610a9e5760019050610b5a565b81610aac5760009050610b5a565b8160018114610ac25760028114610acc57610afb565b6001915050610b5a565b60ff841115610ade57610add6109cb565b5b8360020a915084821115610af557610af46109cb565b5b50610b5a565b5060208310610133831016604e8410600b8410161715610b305782820a905083811115610b2b57610b2a6109cb565b5b610b5a565b610b3d8484846001610a3b565b92509050818404811115610b5457610b536109cb565b5b81810290505b9392505050565b6000610b6c8261078e565b9150610b778361078e565b9250610ba47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a8e565b905092915050565b6000610bb78261078e565b9150610bc28361078e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bfb57610bfa6109cb565b5b828202905092915050565b600069ffffffffffffffffffff82169050919050565b610c2581610c06565b8114610c3057600080fd5b50565b600081519050610c4281610c1c565b92915050565b610c518161075a565b8114610c5c57600080fd5b50565b600081519050610c6e81610c48565b92915050565b600080600080600060a08688031215610c9057610c8f610898565b5b6000610c9e88828901610c33565b9550506020610caf88828901610c5f565b9450506040610cc088828901610989565b9350506060610cd188828901610989565b9250506080610ce288828901610c33565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d298261078e565b9150610d348361078e565b925082610d4457610d43610cef565b5b828204905092915050565b6000610d5a8261078e565b9150610d658361078e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9a57610d996109cb565b5b82820190509291505056fea26469706673582212205cb928fb02b987a5a99f293537b0dc7f2c9c3d4ef0beb0d17dac3bd01b433b0464736f6c634300080a0033",
  "devdoc": {
    "author": "BoringCrypto, 0xCalibur",
    "details": "Optimized version based on https://blog.alphafinance.io/fair-lp-token-pricing/",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "pair_": "The UniswapV2 compatible pair address",
          "tokenOracle_": "The token price 1 lp should be denominated with."
        }
      },
      "latestAnswer()": {
        "returns": {
          "_0": "the price of 1 lp in token price Exemple: - For 1 AVAX = $82 - Total LP Value is: $160,000,000 - LP supply is 8.25 - latestAnswer() returns 234420638348190662349201 / 1e18 = 234420.63 AVAX - 1 LP = 234420.63 AVAX => 234420.63 * 8.25 * 82 = ≈$160,000,000"
        }
      }
    },
    "title": "LPChainlinkOracleV1",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "latestAnswer()": {
        "notice": "Calculates the lastest exchange rate"
      }
    },
    "notice": "Oracle used for getting the price of an LP token",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}