{
  "address": "0x7d76568d84de8A0F34BBf315F53d7772c1fABcD8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "_DEGENBOX",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "DEGENBOX",
      "outputs": [
        {
          "internalType": "contract IBentoBoxV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIMAVAX",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLATYPUS_ROUTER",
      "outputs": [
        {
          "internalType": "contract IPlatypusRouter01",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router01",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDCE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDCEAVAX",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WAVAX",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shareToMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareFrom",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "extraShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareReturned",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0x7d76568d84de8A0F34BBf315F53d7772c1fABcD8",
    "transactionIndex": 15,
    "gasUsed": "995181",
    "logsBloom": "0x000000000000000000001000000000000000000000000000200400800400000000200000000000000040000000000000000002000000000000000000002100000000800000000000000000008000000000000002000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000200000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000004a0000100000000010000000200000000000000000000804000400000000200000000000000000",
    "blockHash": "0xa3101da064f5bf60ff3a33c1215adbe7a32ebb5d64bc727b7c9006287b10d371",
    "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
    "logs": [
      {
        "transactionIndex": 15,
        "blockNumber": 13918310,
        "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
        "address": "0xA389f9430876455C36478DeEa9769B7Ca4E3DDB1",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007d76568d84de8a0f34bbf315f53d7772c1fabcd8",
          "0x000000000000000000000000d825d06061fdc0585e4373f0a3f01a8c02b0e6a4"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 34,
        "blockHash": "0xa3101da064f5bf60ff3a33c1215adbe7a32ebb5d64bc727b7c9006287b10d371"
      },
      {
        "transactionIndex": 15,
        "blockNumber": 13918310,
        "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
        "address": "0x130966628846BFd36ff31a822705796e8cb8C18D",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007d76568d84de8a0f34bbf315f53d7772c1fabcd8",
          "0x00000000000000000000000073256ec7575d999c360c1eec118ecbefd8da7d12"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 35,
        "blockHash": "0xa3101da064f5bf60ff3a33c1215adbe7a32ebb5d64bc727b7c9006287b10d371"
      },
      {
        "transactionIndex": 15,
        "blockNumber": 13918310,
        "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
        "address": "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007d76568d84de8a0f34bbf315f53d7772c1fabcd8",
          "0x00000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d4"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 36,
        "blockHash": "0xa3101da064f5bf60ff3a33c1215adbe7a32ebb5d64bc727b7c9006287b10d371"
      },
      {
        "transactionIndex": 15,
        "blockNumber": 13918310,
        "transactionHash": "0x49ff4b083e93b1a5b1904fa6fb1866a87951466eba3a1dd198c602b481798a1a",
        "address": "0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x0000000000000000000000007d76568d84de8a0f34bbf315f53d7772c1fabcd8",
          "0x00000000000000000000000060ae616a2155ee3d9a68541ba4544862310933d4"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 37,
        "blockHash": "0xa3101da064f5bf60ff3a33c1215adbe7a32ebb5d64bc727b7c9006287b10d371"
      }
    ],
    "blockNumber": 13918310,
    "cumulativeGasUsed": "3229212",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD825d06061fdc0585e4373F0A3F01a8C02b0e6A4"
  ],
  "numDeployments": 1,
  "solcInputHash": "77a728b24953505d9a978abf88608935",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"_DEGENBOX\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DEGENBOX\",\"outputs\":[{\"internalType\":\"contract IBentoBoxV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIMAVAX\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATYPUS_ROUTER\",\"outputs\":[{\"internalType\":\"contract IPlatypusRouter01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDCE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDCEAVAX\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAVAX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareToMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareFrom\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"extraShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareReturned\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap(address,uint256,uint256)\":{\"notice\":\"Swaps to a flexible amount, from an exact input amount\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swappers/Leverage/UsdceAvaxLevSwapperV2.sol\":\"UsdceAvaxLevSwapperV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":690},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\",\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\"},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity >=0.6.2;\\n\\ninterface IUniswapV2Router01 {\\n    function factory() external pure returns (address);\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\n    function removeLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETH(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountToken, uint amountETH);\\n    function removeLiquidityWithPermit(\\n        address tokenA,\\n        address tokenB,\\n        uint liquidity,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountA, uint amountB);\\n    function removeLiquidityETHWithPermit(\\n        address token,\\n        uint liquidity,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint deadline,\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\n    ) external returns (uint amountToken, uint amountETH);\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapTokensForExactTokens(\\n        uint amountOut,\\n        uint amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\n        external\\n        returns (uint[] memory amounts);\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\n        external\\n        payable\\n        returns (uint[] memory amounts);\\n\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\n}\",\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IBentoBoxV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\ninterface IBentoBoxV1 {\\r\\n    function toAmount(\\r\\n        address _token,\\r\\n        uint256 _share,\\r\\n        bool _roundUp\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function withdraw(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256, uint256);\\r\\n\\r\\n    function deposit(\\r\\n        IERC20 token,\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount,\\r\\n        uint256 share\\r\\n    ) external returns (uint256, uint256);\\r\\n\\r\\n    function deploy(\\r\\n        address masterContract,\\r\\n        bytes calldata data,\\r\\n        bool useCreate2\\r\\n    ) external payable returns (address cloneAddress);\\r\\n\\r\\n    function setMasterContractApproval(\\r\\n        address user,\\r\\n        address masterContract,\\r\\n        bool approved,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n\\r\\n    function totals(IERC20) external view returns (uint128 elastic, uint128 base);\\r\\n\\r\\n    function flashLoan(\\r\\n        address borrower,\\r\\n        address receiver,\\r\\n        IERC20 token,\\r\\n        uint256 amount,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n\\r\\n    function toShare(\\r\\n        address token,\\r\\n        uint256 amount,\\r\\n        bool roundUp\\r\\n    ) external view returns (uint256 share);\\r\\n}\\r\\n\",\"keccak256\":\"0xf654f9181ff602627dd70c0c65999488b3a28d6941386231351f38bc9eb7f8fb\",\"license\":\"MIT\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /// @notice EIP 2612\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x33e3d42a9bc583e9d2732a4c71bddebd883199abe927faef674c60463a459730\",\"license\":\"MIT\"},\"contracts/interfaces/ILevSwapperGeneric.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface ILevSwapperGeneric {\\r\\n    /// @notice Swaps to a flexible amount, from an exact input amount\\r\\n    function swap(\\r\\n        address recipient,\\r\\n        uint256 shareToMin,\\r\\n        uint256 shareFrom\\r\\n    ) external returns (uint256 extraShare, uint256 shareReturned);\\r\\n}\\r\\n\",\"keccak256\":\"0x9412c47adeb7f02484cc03a0167ad3da2364b0c659c45a918941f61572d98d78\",\"license\":\"MIT\"},\"contracts/interfaces/platypus/IPlatypusRouter01.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IPlatypusRouter01 {\\r\\n    function swapTokensForTokens(\\r\\n        address[] calldata tokenPath,\\r\\n        address[] calldata poolPath,\\r\\n        uint256 fromAmount,\\r\\n        uint256 minimumToAmount,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountOut, uint256 haircut);\\r\\n}\\r\\n\",\"keccak256\":\"0x7cd1f600b91b4ae3290047ee4056675987354cb114547463d2a9cd8777a8002d\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Babylonian.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n\\r\\npragma solidity >=0.8.4;\\r\\n\\r\\n/// @notice Babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method).\\r\\nlibrary Babylonian {\\r\\n    // computes square roots using the babylonian method\\r\\n    // credit for this implementation goes to\\r\\n    // https://github.com/abdk-consulting/abdk-libraries-solidity/blob/master/ABDKMath64x64.sol#L687\\r\\n    function sqrt(uint256 x) internal pure returns (uint256) {\\r\\n        if (x == 0) return 0;\\r\\n        // this block is equivalent to r = uint256(1) << (BitMath.mostSignificantBit(x) / 2);\\r\\n        // however that code costs significantly more gas\\r\\n        uint256 xx = x;\\r\\n        uint256 r = 1;\\r\\n        if (xx >= 0x100000000000000000000000000000000) {\\r\\n            xx >>= 128;\\r\\n            r <<= 64;\\r\\n        }\\r\\n        if (xx >= 0x10000000000000000) {\\r\\n            xx >>= 64;\\r\\n            r <<= 32;\\r\\n        }\\r\\n        if (xx >= 0x100000000) {\\r\\n            xx >>= 32;\\r\\n            r <<= 16;\\r\\n        }\\r\\n        if (xx >= 0x10000) {\\r\\n            xx >>= 16;\\r\\n            r <<= 8;\\r\\n        }\\r\\n        if (xx >= 0x100) {\\r\\n            xx >>= 8;\\r\\n            r <<= 4;\\r\\n        }\\r\\n        if (xx >= 0x10) {\\r\\n            xx >>= 4;\\r\\n            r <<= 2;\\r\\n        }\\r\\n        if (xx >= 0x8) {\\r\\n            r <<= 1;\\r\\n        }\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1;\\r\\n        r = (r + x / r) >> 1; // Seven iterations should be enough\\r\\n        uint256 r1 = x / r;\\r\\n        return (r < r1 ? r : r1);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfdbe64ff139295d3a3f80e8f10aa93c49b5f362d61423f0f5613c3f0a392e569\",\"license\":\"GPL-3.0-or-later\"},\"contracts/swappers/Leverage/UsdceAvaxLevSwapperV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\\\";\\r\\nimport \\\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\\\";\\r\\nimport \\\"../../libraries/Babylonian.sol\\\";\\r\\nimport \\\"../../interfaces/ILevSwapperGeneric.sol\\\";\\r\\nimport \\\"../../interfaces/IBentoBoxV1.sol\\\";\\r\\nimport \\\"../../interfaces/platypus/IPlatypusRouter01.sol\\\";\\r\\n\\r\\ncontract UsdceAvaxLevSwapperV2 is ILevSwapperGeneric {\\r\\n    IBentoBoxV1 public immutable DEGENBOX;\\r\\n    IUniswapV2Pair public constant USDCEAVAX = IUniswapV2Pair(0xA389f9430876455C36478DeEa9769B7Ca4E3DDB1);\\r\\n    IUniswapV2Pair public constant MIMAVAX = IUniswapV2Pair(0x781655d802670bbA3c89aeBaaEa59D3182fD755D);\\r\\n    IUniswapV2Router01 public constant ROUTER = IUniswapV2Router01(0x60aE616a2155Ee3d9A68541Ba4544862310933d4);\\r\\n    IPlatypusRouter01 public constant PLATYPUS_ROUTER = IPlatypusRouter01(0x73256EC7575D999C360c1EeC118ECbEFd8DA7D12);\\r\\n\\r\\n    IERC20 public constant WAVAX = IERC20(0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7);\\r\\n    IERC20 public constant MIM = IERC20(0x130966628846BFd36ff31a822705796e8cb8C18D);\\r\\n    IERC20 public constant USDC = IERC20(0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E);\\r\\n    IERC20 public constant USDCE = IERC20(0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664);\\r\\n\\r\\n    constructor(IBentoBoxV1 _DEGENBOX) {\\r\\n        DEGENBOX = _DEGENBOX;\\r\\n        USDCEAVAX.approve(address(_DEGENBOX), type(uint256).max);\\r\\n        MIM.approve(address(PLATYPUS_ROUTER), type(uint256).max);\\r\\n        WAVAX.approve(address(ROUTER), type(uint256).max);\\r\\n        USDCE.approve(address(ROUTER), type(uint256).max);\\r\\n    }\\r\\n\\r\\n    function _calculateSwapInAmount(uint256 reserveIn, uint256 userIn) internal pure returns (uint256) {\\r\\n        return (Babylonian.sqrt(reserveIn * ((userIn * 3988000) + (reserveIn * 3988009))) - (reserveIn * 1997)) / 1994;\\r\\n    }\\r\\n\\r\\n    function _getAmountOut(\\r\\n        uint256 amountIn,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) internal pure returns (uint256 amountOut) {\\r\\n        uint256 amountInWithFee = amountIn * 997;\\r\\n        uint256 numerator = amountInWithFee * reserveOut;\\r\\n        uint256 denominator = (reserveIn * 1000) + amountInWithFee;\\r\\n        amountOut = numerator / denominator;\\r\\n    }\\r\\n\\r\\n    // Swaps to a flexible amount, from an exact input amount\\r\\n    function swap(\\r\\n        address recipient,\\r\\n        uint256 shareToMin,\\r\\n        uint256 shareFrom\\r\\n    ) public override returns (uint256 extraShare, uint256 shareReturned) {\\r\\n        (uint256 amount, ) = DEGENBOX.withdraw(MIM, address(this), address(this), 0, shareFrom);\\r\\n\\r\\n        // MIM -> USDC.e\\r\\n        {\\r\\n            address[] memory tokenPath = new address[](3);\\r\\n            tokenPath[0] = address(MIM);\\r\\n            tokenPath[1] = address(USDC);\\r\\n            tokenPath[2] = address(USDCE);\\r\\n            address[] memory poolPath = new address[](2);\\r\\n            poolPath[0] = address(0x30C30d826be87Cd0A4b90855C2F38f7FcfE4eaA7); // MIM -> USDC\\r\\n            poolPath[1] = address(0x66357dCaCe80431aee0A7507e2E361B7e2402370); // USDC -> USDC.e\\r\\n\\r\\n            (amount, ) = PLATYPUS_ROUTER.swapTokensForTokens(tokenPath, poolPath, amount, 0, address(this), type(uint256).max);\\r\\n        }\\r\\n\\r\\n        // 50% USDC.e -> WAVAX\\r\\n        (uint256 reserve0, uint256 reserve1, ) = USDCEAVAX.getReserves();\\r\\n\\r\\n        // Get USDC.e amount to swap for AVAX\\r\\n        uint256 amountUsdceSwapIn = _calculateSwapInAmount(reserve0, amount);\\r\\n        \\r\\n        // AVAX amount out\\r\\n        amount = _getAmountOut(amountUsdceSwapIn, reserve0, reserve1);\\r\\n\\r\\n        USDCE.transfer(address(USDCEAVAX), amountUsdceSwapIn);\\r\\n        USDCEAVAX.swap(0, amount, address(this), \\\"\\\");\\r\\n\\r\\n        ROUTER.addLiquidity(\\r\\n            address(USDCE),\\r\\n            address(WAVAX),\\r\\n            USDCE.balanceOf(address(this)),\\r\\n            WAVAX.balanceOf(address(this)),\\r\\n            0,\\r\\n            0,\\r\\n            address(this),\\r\\n            type(uint256).max\\r\\n        );\\r\\n\\r\\n        (, shareReturned) = DEGENBOX.deposit(IERC20(address(USDCEAVAX)), address(this), recipient, USDCEAVAX.balanceOf(address(this)), 0);\\r\\n        extraShare = shareReturned - shareToMin;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3e3d6b13a38562efe74f7e3d6e1215247bc456205129dd388664c6073fa3e40f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c806390f7609811610076578063daec383d1161005b578063daec383d146101aa578063e0bc66b8146101c5578063f0f98f74146101ec57600080fd5b806390f76098146101675780639f1d0f591461018257600080fd5b806332fe7b26116100a757806332fe7b261461011657806373b295c21461013157806389a302711461014c57600080fd5b8063195187e1146100c35780632de7c259146100fb575b600080fd5b6100de73a7d7079b0fead91f3e65f86e8915cb59c1a4c66481565b6040516001600160a01b0390911681526020015b60405180910390f35b6100de7373256ec7575d999c360c1eec118ecbefd8da7d1281565b6100de7360ae616a2155ee3d9a68541ba4544862310933d481565b6100de73b31f66aa3c1e785363f0875a1b74e27b85fd66c781565b6100de73b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e81565b6100de73a389f9430876455c36478deea9769b7ca4e3ddb181565b610195610190366004610c32565b610207565b604080519283526020830191909152016100f2565b6100de73130966628846bfd36ff31a822705796e8cb8c18d81565b6100de7f000000000000000000000000000000000000000000000000000000000000000081565b6100de73781655d802670bba3c89aebaaea59d3182fd755d81565b60405163097da6d360e41b815273130966628846bfd36ff31a822705796e8cb8c18d6004820152306024820181905260448201526000606482018190526084820183905290819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906397da6d309060a40160408051808303816000875af11580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c69190610c73565b5060408051600380825260808201909252919250600091906020820160608036833701905050905073130966628846bfd36ff31a822705796e8cb8c18d8160008151811061031657610316610c97565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160018151811061035e5761035e610c97565b60200260200101906001600160a01b031690816001600160a01b03168152505073a7d7079b0fead91f3e65f86e8915cb59c1a4c664816002815181106103a6576103a6610c97565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835260009391929091830190803683370190505090507330c30d826be87cd0a4b90855c2f38f7fcfe4eaa78160008151811061040957610409610c97565b60200260200101906001600160a01b031690816001600160a01b0316815250507366357dcace80431aee0a7507e2e361b7e24023708160018151811061045157610451610c97565b6001600160a01b03909216602092830291909101909101526040516321579b7960e01b81527373256ec7575d999c360c1eec118ecbefd8da7d12906321579b79906104ad90859085908890600090309060001990600401610cf1565b60408051808303816000875af11580156104cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ef9190610c73565b5080935050505060008073a389f9430876455c36478deea9769b7ca4e3ddb16001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610d68565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff16915060006105a083856109f6565b90506105ad818484610a58565b60405163a9059cbb60e01b815273a389f9430876455c36478deea9769b7ca4e3ddb160048201526024810183905290945073a7d7079b0fead91f3e65f86e8915cb59c1a4c6649063a9059cbb906044016020604051808303816000875af115801561061c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106409190610db8565b5060405163022c0d9f60e01b81526000600482018190526024820186905230604483015260806064830152608482015273a389f9430876455c36478deea9769b7ca4e3ddb19063022c0d9f9060a401600060405180830381600087803b1580156106a957600080fd5b505af11580156106bd573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527360ae616a2155ee3d9a68541ba4544862310933d4925063e8e33700915073a7d7079b0fead91f3e65f86e8915cb59c1a4c6649073b31f66aa3c1e785363f0875a1b74e27b85fd66c79082906370a0823190602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610dda565b6040516370a0823160e01b815230600482015273b31f66aa3c1e785363f0875a1b74e27b85fd66c7906370a0823190602401602060405180830381865afa1580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190610dda565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b0394851660048201529390921660248401526044830152606482015260006084820181905260a48201523060c482015260001960e4820152610104016060604051808303816000875af1158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d9190610df3565b50506040516370a0823160e01b815230600482018190526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692506302b9446c9173a389f9430876455c36478deea9769b7ca4e3ddb191908d9083906370a0823190602401602060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190610dda565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b1681526001600160a01b03948516600482015292841660248401529216604482015260648101919091526000608482015260a40160408051808303816000875af11580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190610c73565b95506109e890508886610e37565b955050505050935093915050565b60006107ca610a07846107cd610e4e565b610a3d610a1786623cda29610e4e565b610a2486623cda20610e4e565b610a2e9190610e6d565b610a389087610e4e565b610aa7565b610a479190610e37565b610a519190610e85565b9392505050565b600080610a67856103e5610e4e565b90506000610a758483610e4e565b9050600082610a86876103e8610e4e565b610a909190610e6d565b9050610a9c8183610e85565b979650505050505050565b600081610ab657506000919050565b8160017001000000000000000000000000000000008210610adc5760809190911c9060401b5b680100000000000000008210610af75760409190911c9060201b5b6401000000008210610b0e5760209190911c9060101b5b620100008210610b235760109190911c9060081b5b6101008210610b375760089190911c9060041b5b60108210610b4a5760049190911c9060021b5b60088210610b565760011b5b6001610b628286610e85565b610b6c9083610e6d565b901c90506001610b7c8286610e85565b610b869083610e6d565b901c90506001610b968286610e85565b610ba09083610e6d565b901c90506001610bb08286610e85565b610bba9083610e6d565b901c90506001610bca8286610e85565b610bd49083610e6d565b901c90506001610be48286610e85565b610bee9083610e6d565b901c90506001610bfe8286610e85565b610c089083610e6d565b901c90506000610c188286610e85565b9050808210610c275780610c29565b815b95945050505050565b600080600060608486031215610c4757600080fd5b83356001600160a01b0381168114610c5e57600080fd5b95602085013595506040909401359392505050565b60008060408385031215610c8657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610ce65781516001600160a01b031687529582019590820190600101610cc1565b509495945050505050565b60c081526000610d0460c0830189610cad565b8281036020840152610d168189610cad565b9150508560408301528460608301526001600160a01b03841660808301528260a0830152979650505050505050565b80516dffffffffffffffffffffffffffff81168114610d6357600080fd5b919050565b600080600060608486031215610d7d57600080fd5b610d8684610d45565b9250610d9460208501610d45565b9150604084015163ffffffff81168114610dad57600080fd5b809150509250925092565b600060208284031215610dca57600080fd5b81518015158114610a5157600080fd5b600060208284031215610dec57600080fd5b5051919050565b600080600060608486031215610e0857600080fd5b8351925060208401519150604084015190509250925092565b634e487b7160e01b600052601160045260246000fd5b600082821015610e4957610e49610e21565b500390565b6000816000190483118215151615610e6857610e68610e21565b500290565b60008219821115610e8057610e80610e21565b500190565b600082610ea257634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220fbcb9e6ee0dd0477805c74cb0131b59be27d15db855748abba92acb462e94ef564736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swap(address,uint256,uint256)": {
        "notice": "Swaps to a flexible amount, from an exact input amount"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}