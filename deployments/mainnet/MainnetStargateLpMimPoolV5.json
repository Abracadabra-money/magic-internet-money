{
  "address": "0x620F615D6E57a91a83cbFe6d6970296b3CF20Cf0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_mim",
          "type": "address"
        },
        {
          "internalType": "contract IStargateRouter",
          "name": "_stargateRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedRedeemerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBps",
          "type": "uint256"
        }
      ],
      "name": "FeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStargatePool",
          "name": "lp",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "poolId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "contract IOracle",
          "name": "oracle",
          "type": "address"
        }
      ],
      "name": "PoolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStargatePool",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIM",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIM_3POOL",
      "outputs": [
        {
          "internalType": "contract CurvePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIM_ORACLE",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract IStargateRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedRedeemers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "getMimAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "instantRedeemLocal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "instantRedeemLocalMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mim",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mimOracle",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "poolId",
          "type": "uint16"
        },
        {
          "internalType": "contract IOracle",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint80",
          "name": "oracleDecimalsMultipler",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "srcPoolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dstPoolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "dstGasForCall",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dstNativeAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "dstNativeAddr",
              "type": "bytes"
            }
          ],
          "internalType": "struct IStargateRouter.lzTxObj",
          "name": "txParams",
          "type": "tuple"
        }
      ],
      "name": "redeemLocal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "setAllowedRedeemer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeBps",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "lp",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "poolId",
          "type": "uint16"
        },
        {
          "internalType": "contract IOracle",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint80",
          "name": "oracleDecimalsMultipler",
          "type": "uint80"
        }
      ],
      "name": "setPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stargateRouter",
      "outputs": [
        {
          "internalType": "contract IStargateRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStargatePool",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "swapForMim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "inchrouter",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swapToMimOn1Inch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "int128",
          "name": "i",
          "type": "int128"
        }
      ],
      "name": "swapToMimOnCurve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd5a21e2f0ec0c55535b8ab5d1d8979177404ca1160c4b8fce784abef4c1712f2",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0x620F615D6E57a91a83cbFe6d6970296b3CF20Cf0",
    "transactionIndex": 211,
    "gasUsed": "1869827",
    "logsBloom": "0x
    "blockHash": "0xcdc519366ff29c29c40becd81c04ad33d5b5a8e583bd282863f26491a6404c9e",
    "transactionHash": "0xd5a21e2f0ec0c55535b8ab5d1d8979177404ca1160c4b8fce784abef4c1712f2",
    "logs": [
      {
        "transactionIndex": 211,
        "blockNumber": 14769327,
        "transactionHash": "0xd5a21e2f0ec0c55535b8ab5d1d8979177404ca1160c4b8fce784abef4c1712f2",
        "address": "0x620F615D6E57a91a83cbFe6d6970296b3CF20Cf0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000fb3485c2e209a5cfbdc1447674256578f1a80ee3"
        ],
        "data": "0x",
        "logIndex": 257,
        "blockHash": "0xcdc519366ff29c29c40becd81c04ad33d5b5a8e583bd282863f26491a6404c9e"
      }
    ],
    "blockNumber": 14769327,
    "cumulativeGasUsed": "15192310",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3",
    "0x8731d54E9D02c286767d56ac03e8037C07e01e98"
  ],
  "numDeployments": 1,
  "solcInputHash": "e590874295ade4d430608c5ceb7874cf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_mim\",\"type\":\"address\"},{\"internalType\":\"contract IStargateRouter\",\"name\":\"_stargateRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"AllowedRedeemerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBps\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStargatePool\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"poolId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"PoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStargatePool\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIM\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIM_3POOL\",\"outputs\":[{\"internalType\":\"contract CurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIM_ORACLE\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IStargateRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedRedeemers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getMimAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"instantRedeemLocal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"lp\",\"type\":\"address\"}],\"name\":\"instantRedeemLocalMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mim\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mimOracle\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"poolId\",\"type\":\"uint16\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint80\",\"name\":\"oracleDecimalsMultipler\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"srcPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstPoolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dstGasForCall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dstNativeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dstNativeAddr\",\"type\":\"bytes\"}],\"internalType\":\"struct IStargateRouter.lzTxObj\",\"name\":\"txParams\",\"type\":\"tuple\"}],\"name\":\"redeemLocal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedRedeemer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBps\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"lp\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"poolId\",\"type\":\"uint16\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint80\",\"name\":\"oracleDecimalsMultipler\",\"type\":\"uint80\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stargateRouter\",\"outputs\":[{\"internalType\":\"contract IStargateRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStargatePool\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swapForMim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"inchrouter\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swapToMimOn1Inch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"swapToMimOnCurve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeemLocal(uint16,uint256,uint256,uint256,(uint256,uint256,bytes))\":{\"params\":{\"amount\":\"quantity of LP tokens to redeem\",\"dstChainId\":\"the chainId to remove liquidity\",\"dstPoolId\":\"the destination poolId\",\"srcPoolId\":\"the source poolId\",\"txParams\":\"adpater parameters https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stargate/MainnetStargateLpMimPool.sol\":\"MainnetStargateLpMimPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":690},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@rari-capital/solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*///////////////////////////////////////////////////////////////\\n                                  EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                             EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            bytes32 digest = keccak256(\\n                abi.encodePacked(\\n                    \\\"\\\\x19\\\\x01\\\",\\n                    DOMAIN_SEPARATOR(),\\n                    keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n                )\\n            );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x698cdbf614109fafc2bf00057b60715fa3aba9dad447c42f4f8b749ae16ce84f\",\"license\":\"AGPL-3.0-only\"},\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {ERC20} from \\\"../tokens/ERC20.sol\\\";\\n\\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\\n/// @author Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/utils/SafeTransferLib.sol)\\n/// @author Modified from Gnosis (https://github.com/gnosis/gp-v2-contracts/blob/main/src/contracts/libraries/GPv2SafeERC20.sol)\\n/// @dev Use with caution! Some functions in this library knowingly create dirty bits at the destination of the free memory pointer.\\nlibrary SafeTransferLib {\\n    /*///////////////////////////////////////////////////////////////\\n                            ETH OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Transfer the ETH and store if it succeeded or not.\\n            callStatus := call(gas(), to, amount, 0, 0, 0, 0)\\n        }\\n\\n        require(callStatus, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                           ERC20 OPERATIONS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function safeTransferFrom(\\n        ERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"from\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 68), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 100 because the calldata length is 4 + 32 * 3.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        ERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        bool callStatus;\\n\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata to memory piece by piece:\\n            mstore(freeMemoryPointer, 0x095ea7b300000000000000000000000000000000000000000000000000000000) // Begin with the function selector.\\n            mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff)) // Mask and append the \\\"to\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount) // Finally append the \\\"amount\\\" argument. No mask as it's a full 32 byte value.\\n\\n            // Call the token and store if it succeeded or not.\\n            // We use 68 because the calldata length is 4 + 32 * 2.\\n            callStatus := call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)\\n        }\\n\\n        require(didLastOptionalReturnCallSucceed(callStatus), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                         INTERNAL HELPER LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function didLastOptionalReturnCallSucceed(bool callStatus) private pure returns (bool success) {\\n        assembly {\\n            // Get how many bytes the call returned.\\n            let returnDataSize := returndatasize()\\n\\n            // If the call reverted:\\n            if iszero(callStatus) {\\n                // Copy the revert message into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Revert with the same message.\\n                revert(0, returnDataSize)\\n            }\\n\\n            switch returnDataSize\\n            case 32 {\\n                // Copy the return data into memory.\\n                returndatacopy(0, 0, returnDataSize)\\n\\n                // Set success to whether it returned true.\\n                success := iszero(iszero(mload(0)))\\n            }\\n            case 0 {\\n                // There was no return data.\\n                success := 1\\n            }\\n            default {\\n                // It returned some malformed input.\\n                success := 0\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc39d0f5693925ea1e8c517f7cc24211a9899c83a57e62d806180cdb056b6b75\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/IAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IAggregator {\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function latestAnswer() external view returns (int256 answer);\\r\\n}\\r\\n\",\"keccak256\":\"0xba9734b06a3931cf937764adfe9d009e08aa615aec586c201457533a6956275d\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IOracle {\\r\\n    /// @notice Get the latest exchange rate.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the last exchange rate without any state changes.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    /// @notice Returns a human readable (short) name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable symbol name about this oracle.\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    /// @notice Returns a human readable name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable name about this oracle.\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x724e4079842c80db8202bbd75fd9ccee057012cf82f5615898f76ce550ff7f46\",\"license\":\"MIT\"},\"contracts/interfaces/curve/ICurvePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// solhint-disable func-name-mixedcase, var-name-mixedcase\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface CurvePool {\\r\\n    function coins(uint256 i) external view returns (address);\\r\\n\\r\\n    function exchange_underlying(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function exchange(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function exchange(\\r\\n        uint256 i,\\r\\n        uint256 j,\\r\\n        uint256 dx,\\r\\n        uint256 min_dy\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function get_dy_underlying(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function get_dy(\\r\\n        int128 i,\\r\\n        int128 j,\\r\\n        uint256 dx\\r\\n    ) external view returns (uint256);\\r\\n\\r\\n    function approve(address _spender, uint256 _value) external returns (bool);\\r\\n\\r\\n    function add_liquidity(uint256[2] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function add_liquidity(uint256[3] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function add_liquidity(uint256[4] memory amounts, uint256 _min_mint_amount) external;\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        int128 i,\\r\\n        uint256 min_amount\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        uint256 i,\\r\\n        uint256 min_amount\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function remove_liquidity_one_coin(\\r\\n        uint256 tokenAmount,\\r\\n        int128 i,\\r\\n        uint256 min_amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x22260ed5207ce81d1bfc5f97685d1859f034861ffb22adfed2f176ab05bb6a61\",\"license\":\"MIT\"},\"contracts/interfaces/stargate/IStargatePool.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IStargatePool {\\r\\n    function deltaCredit() external view returns (uint256);\\r\\n\\r\\n    function totalLiquidity() external view returns (uint256);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function decimals() external view returns (uint256);\\r\\n\\r\\n    function localDecimals() external view returns (uint256);\\r\\n\\r\\n    function token() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0xa44af87e3fecd3332216b53b5694c875b1d56295a34e91058bd0e1127ba62dd5\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/stargate/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\r\\n// solhint-disable contract-name-camelcase\\r\\n\\r\\npragma solidity >=0.7.6;\\r\\npragma abicoder v2;\\r\\n\\r\\ninterface IStargateRouter {\\r\\n    struct lzTxObj {\\r\\n        uint256 dstGasForCall;\\r\\n        uint256 dstNativeAmount;\\r\\n        bytes dstNativeAddr;\\r\\n    }\\r\\n\\r\\n    function addLiquidity(\\r\\n        uint256 _poolId,\\r\\n        uint256 _amountLD,\\r\\n        address _to\\r\\n    ) external;\\r\\n\\r\\n    function swap(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLD,\\r\\n        uint256 _minAmountLD,\\r\\n        lzTxObj memory _lzTxParams,\\r\\n        bytes calldata _to,\\r\\n        bytes calldata _payload\\r\\n    ) external payable;\\r\\n\\r\\n    function redeemRemote(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        uint256 _minAmountLD,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function instantRedeemLocal(\\r\\n        uint16 _srcPoolId,\\r\\n        uint256 _amountLP,\\r\\n        address _to\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function redeemLocal(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendCredits(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _functionType,\\r\\n        bytes calldata _toAddress,\\r\\n        bytes calldata _transferAndCallPayload,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256, uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x5caa470f6ffb1935cf48357f65f1f2fa79cf6f54f46c335f3f97a3b0f8ea1b91\",\"license\":\"BUSL-1.1\"},\"contracts/stargate/BaseStargateLpMimPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\\\";\\r\\nimport \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../interfaces/stargate/IStargatePool.sol\\\";\\r\\nimport \\\"../interfaces/stargate/IStargateRouter.sol\\\";\\r\\nimport \\\"../interfaces/IOracle.sol\\\";\\r\\nimport \\\"../interfaces/IAggregator.sol\\\";\\r\\n\\r\\nabstract contract BaseStargateLpMimPool is Ownable {\\r\\n    using SafeTransferLib for ERC20;\\r\\n\\r\\n    event AllowedRedeemerChanged(address redeemer, bool allowed);\\r\\n    event Swap(address from, IStargatePool tokenIn, uint256 amountIn, uint256 amountOut, address recipient);\\r\\n    event PoolChanged(IStargatePool lp, uint16 poolId, IOracle oracle);\\r\\n    event FeeChanged(uint256 feeBps);\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint16 poolId; // 16 bits\\r\\n        IOracle oracle; // 160 bits\\r\\n        uint80 oracleDecimalsMultipler; // 80 bits\\r\\n    }\\r\\n\\r\\n    ERC20 public immutable mim;\\r\\n    IAggregator public immutable mimOracle;\\r\\n\\r\\n    IStargateRouter public immutable stargateRouter;\\r\\n\\r\\n    uint256 public feeBps;\\r\\n\\r\\n    mapping(IStargatePool => PoolInfo) public pools;\\r\\n    mapping(address => bool) public allowedRedeemers;\\r\\n\\r\\n    modifier onlyAllowedRedeemers() {\\r\\n        require(allowedRedeemers[msg.sender] == true, \\\"not allowed\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        ERC20 _mim,\\r\\n        IAggregator _mimOracle,\\r\\n        IStargateRouter _stargateRouter\\r\\n    ) {\\r\\n        feeBps = 20;\\r\\n        mim = _mim;\\r\\n        mimOracle = _mimOracle;\\r\\n        stargateRouter = _stargateRouter;\\r\\n    }\\r\\n\\r\\n    function swapForMim(\\r\\n        IStargatePool tokenIn,\\r\\n        uint256 amountIn,\\r\\n        address recipient\\r\\n    ) external onlyAllowedRedeemers returns (uint256) {\\r\\n        require(address(pools[tokenIn].oracle) != address(0), \\\"invalid tokenIn\\\");\\r\\n\\r\\n        uint256 amount = getMimAmountOut(tokenIn, amountIn);\\r\\n\\r\\n        ERC20(address(tokenIn)).safeTransferFrom(msg.sender, address(this), amountIn);\\r\\n        mim.transfer(recipient, amount);\\r\\n\\r\\n        emit Swap(msg.sender, tokenIn, amountIn, amount, recipient);\\r\\n\\r\\n        return amount;\\r\\n    }\\r\\n\\r\\n    function getMimAmountOut(IStargatePool tokenIn, uint256 amountIn) public view returns (uint256) {\\r\\n        require(address(pools[tokenIn].oracle) != address(0), \\\"invalid tokenIn\\\");\\r\\n\\r\\n        uint256 mimUsd = uint256(mimOracle.latestAnswer()); // 8 decimals\\r\\n\\r\\n        /// @dev for oracleDecimalsMultipler = 14 and tokenIn is 6 decimals -> mimAmount is 18 decimals\\r\\n        uint256 amount = ((amountIn * 10**pools[tokenIn].oracleDecimalsMultipler) / pools[tokenIn].oracle.peekSpot(\\\"\\\")) / mimUsd;\\r\\n        return amount - ((amount * feeBps) / 10_000);\\r\\n    }\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n    function setAllowedRedeemer(address redeemer, bool allowed) external onlyOwner {\\r\\n        allowedRedeemers[redeemer] = allowed;\\r\\n        emit AllowedRedeemerChanged(redeemer, allowed);\\r\\n    }\\r\\n\\r\\n    function setFee(uint256 _feeBps) external onlyOwner {\\r\\n        require(_feeBps <= 10_000, \\\"max fee is 10000\\\");\\r\\n        feeBps = _feeBps;\\r\\n\\r\\n        emit FeeChanged(_feeBps);\\r\\n    }\\r\\n\\r\\n    function setPool(\\r\\n        IStargatePool lp,\\r\\n        uint16 poolId,\\r\\n        IOracle oracle,\\r\\n        uint80 oracleDecimalsMultipler\\r\\n    ) external onlyOwner {\\r\\n        pools[lp] = PoolInfo({poolId: poolId, oracle: oracle, oracleDecimalsMultipler: oracleDecimalsMultipler});\\r\\n\\r\\n        ERC20(address(lp)).safeApprove(address(stargateRouter), type(uint256).max);\\r\\n\\r\\n        emit PoolChanged(lp, poolId, oracle);\\r\\n    }\\r\\n\\r\\n    function getMaximumInstantRedeemable(IStargatePool lp) internal view returns (uint256) {\\r\\n        uint256 totalLiquidity = lp.totalLiquidity();\\r\\n\\r\\n        require(totalLiquidity > 0, \\\"totalLiquidity is 0\\\");\\r\\n        uint256 amountSD = lp.deltaCredit();\\r\\n\\r\\n        return (amountSD * lp.totalSupply()) / totalLiquidity;\\r\\n    }\\r\\n\\r\\n    /// @param dstChainId the chainId to remove liquidity\\r\\n    /// @param srcPoolId the source poolId\\r\\n    /// @param dstPoolId the destination poolId\\r\\n    /// @param amount quantity of LP tokens to redeem\\r\\n    /// @param txParams adpater parameters\\r\\n    /// https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids\\r\\n    function redeemLocal(\\r\\n        uint16 dstChainId,\\r\\n        uint256 srcPoolId,\\r\\n        uint256 dstPoolId,\\r\\n        uint256 amount,\\r\\n        IStargateRouter.lzTxObj memory txParams\\r\\n    ) external payable onlyOwner {\\r\\n        stargateRouter.redeemLocal{value: msg.value}(\\r\\n            dstChainId,\\r\\n            srcPoolId,\\r\\n            dstPoolId,\\r\\n            payable(msg.sender),\\r\\n            amount,\\r\\n            abi.encodePacked(address(this)),\\r\\n            txParams\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function instantRedeemLocalMax(IStargatePool lp) external onlyOwner {\\r\\n        PoolInfo memory info = pools[lp];\\r\\n\\r\\n        uint256 amount = ERC20(address(lp)).balanceOf(address(this));\\r\\n        uint256 max = getMaximumInstantRedeemable(lp);\\r\\n\\r\\n        stargateRouter.instantRedeemLocal(info.poolId, amount > max ? max : amount, address(this));\\r\\n    }\\r\\n\\r\\n    function instantRedeemLocal(IStargatePool lp, uint256 amount) external onlyOwner {\\r\\n        PoolInfo memory info = pools[lp];\\r\\n        stargateRouter.instantRedeemLocal(info.poolId, amount, address(this));\\r\\n    }\\r\\n\\r\\n    /*** Emergency Functions ***/\\r\\n    function execute(\\r\\n        address to,\\r\\n        uint256 value,\\r\\n        bytes calldata data\\r\\n    ) external onlyOwner returns (bool, bytes memory) {\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory result) = to.call{value: value}(data);\\r\\n\\r\\n        return (success, result);\\r\\n    }\\r\\n\\r\\n    function rescueTokens(\\r\\n        ERC20 token,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external onlyOwner {\\r\\n        token.safeTransfer(to, amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc1a1ada391e0046b6d25cbeef9892680b3af42d09b20ecddaa8b2ac282bbda19\",\"license\":\"MIT\"},\"contracts/stargate/MainnetStargateLpMimPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport \\\"@rari-capital/solmate/src/utils/SafeTransferLib.sol\\\";\\r\\nimport \\\"@rari-capital/solmate/src/tokens/ERC20.sol\\\";\\r\\nimport \\\"../interfaces/stargate/IStargateRouter.sol\\\";\\r\\nimport \\\"../interfaces/stargate/IStargatePool.sol\\\";\\r\\nimport \\\"../interfaces/curve/ICurvePool.sol\\\";\\r\\n\\r\\nimport \\\"./BaseStargateLpMimPool.sol\\\";\\r\\n\\r\\ncontract MainnetStargateLpMimPool is BaseStargateLpMimPool {\\r\\n    using SafeTransferLib for ERC20;\\r\\n\\r\\n    IAggregator public constant MIM_ORACLE = IAggregator(0x7A364e8770418566e3eb2001A96116E6138Eb32F);\\r\\n    IStargateRouter public constant ROUTER = IStargateRouter(0x8731d54E9D02c286767d56ac03e8037C07e01e98);\\r\\n    ERC20 public constant MIM = ERC20(0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3);\\r\\n    CurvePool public constant MIM_3POOL = CurvePool(0x5a6A4D54456819380173272A5E8E9B9904BdF41B);\\r\\n\\r\\n    constructor(ERC20 _mim, IStargateRouter _stargateRouter) BaseStargateLpMimPool(MIM, MIM_ORACLE, ROUTER) {}\\r\\n\\r\\n    function swapToMimOn1Inch(\\r\\n        address inchrouter,\\r\\n        ERC20 tokenIn,\\r\\n        bytes calldata data\\r\\n    ) external onlyOwner {\\r\\n        tokenIn.safeApprove(inchrouter, type(uint256).max);\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, ) = inchrouter.call(data);\\r\\n        require(success, \\\"1inch swap unsucessful\\\");\\r\\n\\r\\n        tokenIn.safeApprove(inchrouter, 0);\\r\\n    }\\r\\n\\r\\n    function swapToMimOnCurve(ERC20 tokenIn, uint256 amountIn, int128 i) external onlyOwner {\\r\\n        tokenIn.safeApprove(address(MIM_3POOL), amountIn);\\r\\n        MIM_3POOL.exchange_underlying(i, 0, amountIn, 0, address(this));\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x98e63cbc5e9f1f4d5f2510b772b40dd9ec832df2b2088fbbf5d3bcee9fb87de2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620021a7380380620021a783398101604081905262000034916200010d565b7399d8a9c45b2eca8864373a26d1459e3dff1e17f3737a364e8770418566e3eb2001a96116e6138eb32f738731d54e9d02c286767d56ac03e8037c07e01e986200007e33620000a4565b60146001556001600160a01b0392831660805290821660a0521660c052506200014c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200010a57600080fd5b50565b600080604083850312156200012157600080fd5b82516200012e81620000f4565b60208401519092506200014181620000f4565b809150509250929050565b60805160a05160c051612001620001a6600039600081816104b8015281816107e00152818161096901528181610cbe01526110710152600081816102ab01526111510152600081816103da01526106c901526120016000f3fe6080604052600436106101965760003560e01c8063910ae7d7116100e1578063a9e56f3c1161008a578063c300e4d811610064578063c300e4d814610528578063cea9d26f14610550578063daec383d14610570578063f2fde38b1461059857600080fd5b8063a9e56f3c146104a6578063b0eda7b6146104da578063b61d27f6146104fa57600080fd5b80639f67679e116100bb5780639f67679e146103c8578063a4063dbc146103fc578063a4c47dc41461048657600080fd5b8063910ae7d7146103685780639277ec83146103885780639a8308eb146103a857600080fd5b80635c356ee711610143578063723ef93d1161011d578063723ef93d146103025780637537dd171461032a5780638da5cb5b1461034a57600080fd5b80635c356ee71461029957806369fe0e2d146102cd578063715018a6146102ed57600080fd5b806338f6d6d21161017457806338f6d6d2146102245780634871c9e5146102395780635ae28ca01461027957600080fd5b806324a9d8531461019b5780632f3fc5cd146101c457806332fe7b26146101e4575b600080fd5b3480156101a757600080fd5b506101b160015481565b6040519081526020015b60405180910390f35b3480156101d057600080fd5b506101b16101df3660046118bf565b6105b8565b3480156101f057600080fd5b5061020c738731d54e9d02c286767d56ac03e8037c07e01e9881565b6040516001600160a01b0390911681526020016101bb565b610237610232366004611988565b610796565b005b34801561024557600080fd5b50610269610254366004611a8d565b60036020526000908152604090205460ff1681565b60405190151581526020016101bb565b34801561028557600080fd5b50610237610294366004611ab1565b6108a7565b3480156102a557600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d957600080fd5b506102376102e8366004611add565b6109dd565b3480156102f957600080fd5b50610237610ab2565b34801561030e57600080fd5b5061020c737a364e8770418566e3eb2001a96116e6138eb32f81565b34801561033657600080fd5b50610237610345366004611b04565b610b06565b34801561035657600080fd5b506000546001600160a01b031661020c565b34801561037457600080fd5b50610237610383366004611a8d565b610bb1565b34801561039457600080fd5b506102376103a3366004611b3d565b610d8e565b3480156103b457600080fd5b506102376103c3366004611bc4565b610e54565b3480156103d457600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561040857600080fd5b50610452610417366004611a8d565b60026020526000908152604090205461ffff8116906201000081046001600160a01b031690600160b01b900469ffffffffffffffffffff1683565b6040805161ffff90941684526001600160a01b03909216602084015269ffffffffffffffffffff16908201526060016101bb565b34801561049257600080fd5b506102376104a1366004611c29565b610f76565b3480156104b257600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104e657600080fd5b506101b16104f5366004611ab1565b6110eb565b34801561050657600080fd5b5061051a610515366004611c92565b6112f0565b6040516101bb929190611d23565b34801561053457600080fd5b5061020c735a6a4d54456819380173272a5e8e9b9904bdf41b81565b34801561055c57600080fd5b5061023761056b366004611d3e565b6113ac565b34801561057c57600080fd5b5061020c7399d8a9c45b2eca8864373a26d1459e3dff1e17f381565b3480156105a457600080fd5b506102376105b3366004611a8d565b61140d565b3360009081526003602052604081205460ff1615156001146106215760405162461bcd60e51b815260206004820152600b60248201527f6e6f7420616c6c6f77656400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03848116600090815260026020526040902054620100009004166106805760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103a37b5b2b724b760891b6044820152606401610618565b600061068c85856110eb565b90506106a36001600160a01b0386163330876114c6565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611d7f565b50604080513381526001600160a01b038781166020830152818301879052606082018490528516608082015290517fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d09181900360a00190a1949350505050565b6000546001600160a01b031633146107de5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638f2e1d183487878733883060405160200161083c919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052896040518963ffffffff1660e01b815260040161086e9796959493929190611d9c565b6000604051808303818588803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b031633146108ef5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b038281166000908152600260209081526040918290208251606081018452905461ffff8116808352620100008204861693830193909352600160b01b900469ffffffffffffffffffff1681840152915163c4de93a560e01b815260048101919091526024810184905230604482015290917f0000000000000000000000000000000000000000000000000000000000000000169063c4de93a5906064015b6020604051808303816000875af11580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611e18565b50505050565b6000546001600160a01b03163314610a255760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b612710811115610a775760405162461bcd60e51b815260206004820152601060248201527f6d617820666565206973203130303030000000000000000000000000000000006044820152606401610618565b60018190556040518181527f6bbc57480a46553fa4d156ce702beef5f3ad66303b0ed1a5d4cb44966c6584c39060200160405180910390a150565b6000546001600160a01b03163314610afa5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610b04600061155c565b565b6000546001600160a01b03163314610b4e5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b038216600081815260036020908152604091829020805460ff19168515159081179091558251938452908301527fb725d7ec39b904aca1b08e66391ea125cdeb3105d865653cf9d0d48e949e6c0d910160405180910390a15050565b6000546001600160a01b03163314610bf95760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b0381811660008181526002602090815260408083208151606081018352905461ffff8116825262010000810490961692810192909252600160b01b90940469ffffffffffffffffffff168185015292516370a0823160e01b81523060048201529091906370a0823190602401602060405180830381865afa158015610c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cad9190611e18565b90506000610cba846115b9565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4de93a58460000151838511610cfd5784610cff565b835b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261ffff909216600483015260248201523060448201526064016020604051808303816000875af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611e18565b5050505050565b6000546001600160a01b03163314610dd65760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610dfe6001600160a01b038416735a6a4d54456819380173272a5e8e9b9904bdf41b84611755565b6040516322770cc360e11b8152600f82900b6004820152600060248201819052604482018490526064820152306084820152735a6a4d54456819380173272a5e8e9b9904bdf41b906344ee19869060a401610994565b6000546001600160a01b03163314610e9c5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610eb26001600160a01b03841685600019611755565b6000846001600160a01b03168383604051610ece929190611e31565b6000604051808303816000865af19150503d8060008114610f0b576040519150601f19603f3d011682016040523d82523d6000602084013e610f10565b606091505b5050905080610f615760405162461bcd60e51b815260206004820152601660248201527f31696e6368207377617020756e73756365737366756c000000000000000000006044820152606401610618565b610d876001600160a01b038516866000611755565b6000546001600160a01b03163314610fbe5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6040805160608101825261ffff80861682526001600160a01b03808616602080850191825269ffffffffffffffffffff8088168688019081528b851660008181526002909452979092209551865493519251909116600160b01b0275ffffffffffffffffffffffffffffffffffffffffffff9290941662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009093169416939093171791909116179055611098907f0000000000000000000000000000000000000000000000000000000000000000600019611755565b604080516001600160a01b03868116825261ffff8616602083015284168183015290517f5c47df77929ae401d171c6f1e18dc38eb66ce08eb8a86180b5ee837d982870949181900360600190a150505050565b6001600160a01b038281166000908152600260205260408120549091620100009091041661114d5760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103a37b5b2b724b760891b6044820152606401610618565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190611e18565b6001600160a01b03808616600090815260026020526040808220549051630d39bbef60e41b815293945090928492620100009092049091169063d39bbef09061122890600401602080825260009082015260400190565b602060405180830381865afa158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190611e18565b6001600160a01b0387166000908152600260205260409020546112a090600160b01b900469ffffffffffffffffffff16600a611f3b565b6112aa9087611f53565b6112b49190611f72565b6112be9190611f72565b9050612710600154826112d19190611f53565b6112db9190611f72565b6112e59082611f94565b925050505b92915050565b600080546060906001600160a01b0316331461133c5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b600080876001600160a01b031687878760405161135a929190611e31565b60006040518083038185875af1925050503d8060008114611397576040519150601f19603f3d011682016040523d82523d6000602084013e61139c565b606091505b5090999098509650505050505050565b6000546001600160a01b031633146113f45760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6114086001600160a01b03841683836117dc565b505050565b6000546001600160a01b031633146114555760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b0381166114ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b6114c38161155c565b50565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af191505061151081611863565b610d875760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610618565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b03166315770f926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161e9190611e18565b9050600081116116705760405162461bcd60e51b815260206004820152601360248201527f746f74616c4c69717569646974792069732030000000000000000000000000006044820152606401610618565b6000836001600160a01b0316631e8e51da6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d49190611e18565b905081846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190611e18565b6117439083611f53565b61174d9190611f72565b949350505050565b600060405163095ea7b360e01b81526001600160a01b03841660048201528260248201526000806044836000895af191505061179081611863565b6109d75760405162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610618565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af191505061181781611863565b6109d75760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610618565b60003d8261187557806000803e806000fd5b806020811461188d57801561189e57600092506118a3565b816000803e600051151592506118a3565b600192505b5050919050565b6001600160a01b03811681146114c357600080fd5b6000806000606084860312156118d457600080fd5b83356118df816118aa565b92506020840135915060408401356118f6816118aa565b809150509250925092565b803561ffff8116811461191357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561195157611951611918565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561198057611980611918565b604052919050565b600080600080600060a086880312156119a057600080fd5b6119a986611901565b945060208087013594506040870135935060608701359250608087013567ffffffffffffffff808211156119dc57600080fd5b908801906060828b0312156119f057600080fd5b6119f861192e565b823581528383013584820152604083013582811115611a1657600080fd5b8084019350508a601f840112611a2b57600080fd5b823582811115611a3d57611a3d611918565b611a4f601f8201601f19168601611957565b92508083528b85828601011115611a6557600080fd5b8085850186850137600085828501015250816040820152809450505050509295509295909350565b600060208284031215611a9f57600080fd5b8135611aaa816118aa565b9392505050565b60008060408385031215611ac457600080fd5b8235611acf816118aa565b946020939093013593505050565b600060208284031215611aef57600080fd5b5035919050565b80151581146114c357600080fd5b60008060408385031215611b1757600080fd5b8235611b22816118aa565b91506020830135611b3281611af6565b809150509250929050565b600080600060608486031215611b5257600080fd5b8335611b5d816118aa565b9250602084013591506040840135600f81900b81146118f657600080fd5b60008083601f840112611b8d57600080fd5b50813567ffffffffffffffff811115611ba557600080fd5b602083019150836020828501011115611bbd57600080fd5b9250929050565b60008060008060608587031215611bda57600080fd5b8435611be5816118aa565b93506020850135611bf5816118aa565b9250604085013567ffffffffffffffff811115611c1157600080fd5b611c1d87828801611b7b565b95989497509550505050565b60008060008060808587031215611c3f57600080fd5b8435611c4a816118aa565b9350611c5860208601611901565b92506040850135611c68816118aa565b9150606085013569ffffffffffffffffffff81168114611c8757600080fd5b939692955090935050565b60008060008060608587031215611ca857600080fd5b8435611cb3816118aa565b935060208501359250604085013567ffffffffffffffff811115611c1157600080fd5b6000815180845260005b81811015611cfc57602081850181015186830182015201611ce0565b81811115611d0e576000602083870101525b50601f01601f19169290920160200192915050565b821515815260406020820152600061174d6040830184611cd6565b600080600060608486031215611d5357600080fd5b8335611d5e816118aa565b92506020840135611d6e816118aa565b929592945050506040919091013590565b600060208284031215611d9157600080fd5b8151611aaa81611af6565b61ffff881681528660208201528560408201526001600160a01b038516606082015283608082015260e060a08201526000611dda60e0830185611cd6565b82810360c08401528351815260208401516020820152604084015160606040830152611e096060830182611cd6565b9b9a5050505050505050505050565b600060208284031215611e2a57600080fd5b5051919050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611e92578160001904821115611e7857611e78611e41565b80851615611e8557918102915b93841c9390800290611e5c565b509250929050565b600082611ea9575060016112ea565b81611eb6575060006112ea565b8160018114611ecc5760028114611ed657611ef2565b60019150506112ea565b60ff841115611ee757611ee7611e41565b50506001821b6112ea565b5060208310610133831016604e8410600b8410161715611f15575081810a6112ea565b611f1f8383611e57565b8060001904821115611f3357611f33611e41565b029392505050565b6000611aaa69ffffffffffffffffffff841683611e9a565b6000816000190483118215151615611f6d57611f6d611e41565b500290565b600082611f8f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611fa657611fa6611e41565b50039056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212202a416d3237ff2a6b496681e93d599784a0e840a985a5cfd113aea0388a1210c664736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106101965760003560e01c8063910ae7d7116100e1578063a9e56f3c1161008a578063c300e4d811610064578063c300e4d814610528578063cea9d26f14610550578063daec383d14610570578063f2fde38b1461059857600080fd5b8063a9e56f3c146104a6578063b0eda7b6146104da578063b61d27f6146104fa57600080fd5b80639f67679e116100bb5780639f67679e146103c8578063a4063dbc146103fc578063a4c47dc41461048657600080fd5b8063910ae7d7146103685780639277ec83146103885780639a8308eb146103a857600080fd5b80635c356ee711610143578063723ef93d1161011d578063723ef93d146103025780637537dd171461032a5780638da5cb5b1461034a57600080fd5b80635c356ee71461029957806369fe0e2d146102cd578063715018a6146102ed57600080fd5b806338f6d6d21161017457806338f6d6d2146102245780634871c9e5146102395780635ae28ca01461027957600080fd5b806324a9d8531461019b5780632f3fc5cd146101c457806332fe7b26146101e4575b600080fd5b3480156101a757600080fd5b506101b160015481565b6040519081526020015b60405180910390f35b3480156101d057600080fd5b506101b16101df3660046118bf565b6105b8565b3480156101f057600080fd5b5061020c738731d54e9d02c286767d56ac03e8037c07e01e9881565b6040516001600160a01b0390911681526020016101bb565b610237610232366004611988565b610796565b005b34801561024557600080fd5b50610269610254366004611a8d565b60036020526000908152604090205460ff1681565b60405190151581526020016101bb565b34801561028557600080fd5b50610237610294366004611ab1565b6108a7565b3480156102a557600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d957600080fd5b506102376102e8366004611add565b6109dd565b3480156102f957600080fd5b50610237610ab2565b34801561030e57600080fd5b5061020c737a364e8770418566e3eb2001a96116e6138eb32f81565b34801561033657600080fd5b50610237610345366004611b04565b610b06565b34801561035657600080fd5b506000546001600160a01b031661020c565b34801561037457600080fd5b50610237610383366004611a8d565b610bb1565b34801561039457600080fd5b506102376103a3366004611b3d565b610d8e565b3480156103b457600080fd5b506102376103c3366004611bc4565b610e54565b3480156103d457600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561040857600080fd5b50610452610417366004611a8d565b60026020526000908152604090205461ffff8116906201000081046001600160a01b031690600160b01b900469ffffffffffffffffffff1683565b6040805161ffff90941684526001600160a01b03909216602084015269ffffffffffffffffffff16908201526060016101bb565b34801561049257600080fd5b506102376104a1366004611c29565b610f76565b3480156104b257600080fd5b5061020c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104e657600080fd5b506101b16104f5366004611ab1565b6110eb565b34801561050657600080fd5b5061051a610515366004611c92565b6112f0565b6040516101bb929190611d23565b34801561053457600080fd5b5061020c735a6a4d54456819380173272a5e8e9b9904bdf41b81565b34801561055c57600080fd5b5061023761056b366004611d3e565b6113ac565b34801561057c57600080fd5b5061020c7399d8a9c45b2eca8864373a26d1459e3dff1e17f381565b3480156105a457600080fd5b506102376105b3366004611a8d565b61140d565b3360009081526003602052604081205460ff1615156001146106215760405162461bcd60e51b815260206004820152600b60248201527f6e6f7420616c6c6f77656400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03848116600090815260026020526040902054620100009004166106805760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103a37b5b2b724b760891b6044820152606401610618565b600061068c85856110eb565b90506106a36001600160a01b0386163330876114c6565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611d7f565b50604080513381526001600160a01b038781166020830152818301879052606082018490528516608082015290517fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d09181900360a00190a1949350505050565b6000546001600160a01b031633146107de5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638f2e1d183487878733883060405160200161083c919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052896040518963ffffffff1660e01b815260040161086e9796959493929190611d9c565b6000604051808303818588803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b031633146108ef5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b038281166000908152600260209081526040918290208251606081018452905461ffff8116808352620100008204861693830193909352600160b01b900469ffffffffffffffffffff1681840152915163c4de93a560e01b815260048101919091526024810184905230604482015290917f0000000000000000000000000000000000000000000000000000000000000000169063c4de93a5906064015b6020604051808303816000875af11580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611e18565b50505050565b6000546001600160a01b03163314610a255760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b612710811115610a775760405162461bcd60e51b815260206004820152601060248201527f6d617820666565206973203130303030000000000000000000000000000000006044820152606401610618565b60018190556040518181527f6bbc57480a46553fa4d156ce702beef5f3ad66303b0ed1a5d4cb44966c6584c39060200160405180910390a150565b6000546001600160a01b03163314610afa5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610b04600061155c565b565b6000546001600160a01b03163314610b4e5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b038216600081815260036020908152604091829020805460ff19168515159081179091558251938452908301527fb725d7ec39b904aca1b08e66391ea125cdeb3105d865653cf9d0d48e949e6c0d910160405180910390a15050565b6000546001600160a01b03163314610bf95760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b0381811660008181526002602090815260408083208151606081018352905461ffff8116825262010000810490961692810192909252600160b01b90940469ffffffffffffffffffff168185015292516370a0823160e01b81523060048201529091906370a0823190602401602060405180830381865afa158015610c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cad9190611e18565b90506000610cba846115b9565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c4de93a58460000151838511610cfd5784610cff565b835b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815261ffff909216600483015260248201523060448201526064016020604051808303816000875af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611e18565b5050505050565b6000546001600160a01b03163314610dd65760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610dfe6001600160a01b038416735a6a4d54456819380173272a5e8e9b9904bdf41b84611755565b6040516322770cc360e11b8152600f82900b6004820152600060248201819052604482018490526064820152306084820152735a6a4d54456819380173272a5e8e9b9904bdf41b906344ee19869060a401610994565b6000546001600160a01b03163314610e9c5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b610eb26001600160a01b03841685600019611755565b6000846001600160a01b03168383604051610ece929190611e31565b6000604051808303816000865af19150503d8060008114610f0b576040519150601f19603f3d011682016040523d82523d6000602084013e610f10565b606091505b5050905080610f615760405162461bcd60e51b815260206004820152601660248201527f31696e6368207377617020756e73756365737366756c000000000000000000006044820152606401610618565b610d876001600160a01b038516866000611755565b6000546001600160a01b03163314610fbe5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6040805160608101825261ffff80861682526001600160a01b03808616602080850191825269ffffffffffffffffffff8088168688019081528b851660008181526002909452979092209551865493519251909116600160b01b0275ffffffffffffffffffffffffffffffffffffffffffff9290941662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009093169416939093171791909116179055611098907f0000000000000000000000000000000000000000000000000000000000000000600019611755565b604080516001600160a01b03868116825261ffff8616602083015284168183015290517f5c47df77929ae401d171c6f1e18dc38eb66ce08eb8a86180b5ee837d982870949181900360600190a150505050565b6001600160a01b038281166000908152600260205260408120549091620100009091041661114d5760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103a37b5b2b724b760891b6044820152606401610618565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190611e18565b6001600160a01b03808616600090815260026020526040808220549051630d39bbef60e41b815293945090928492620100009092049091169063d39bbef09061122890600401602080825260009082015260400190565b602060405180830381865afa158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190611e18565b6001600160a01b0387166000908152600260205260409020546112a090600160b01b900469ffffffffffffffffffff16600a611f3b565b6112aa9087611f53565b6112b49190611f72565b6112be9190611f72565b9050612710600154826112d19190611f53565b6112db9190611f72565b6112e59082611f94565b925050505b92915050565b600080546060906001600160a01b0316331461133c5760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b600080876001600160a01b031687878760405161135a929190611e31565b60006040518083038185875af1925050503d8060008114611397576040519150601f19603f3d011682016040523d82523d6000602084013e61139c565b606091505b5090999098509650505050505050565b6000546001600160a01b031633146113f45760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6114086001600160a01b03841683836117dc565b505050565b6000546001600160a01b031633146114555760405162461bcd60e51b81526020600482018190526024820152600080516020611fac8339815191526044820152606401610618565b6001600160a01b0381166114ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b6114c38161155c565b50565b60006040516323b872dd60e01b81526001600160a01b03851660048201526001600160a01b038416602482015282604482015260008060648360008a5af191505061151081611863565b610d875760405162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610618565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826001600160a01b03166315770f926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161e9190611e18565b9050600081116116705760405162461bcd60e51b815260206004820152601360248201527f746f74616c4c69717569646974792069732030000000000000000000000000006044820152606401610618565b6000836001600160a01b0316631e8e51da6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d49190611e18565b905081846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117399190611e18565b6117439083611f53565b61174d9190611f72565b949350505050565b600060405163095ea7b360e01b81526001600160a01b03841660048201528260248201526000806044836000895af191505061179081611863565b6109d75760405162461bcd60e51b815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610618565b600060405163a9059cbb60e01b81526001600160a01b03841660048201528260248201526000806044836000895af191505061181781611863565b6109d75760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610618565b60003d8261187557806000803e806000fd5b806020811461188d57801561189e57600092506118a3565b816000803e600051151592506118a3565b600192505b5050919050565b6001600160a01b03811681146114c357600080fd5b6000806000606084860312156118d457600080fd5b83356118df816118aa565b92506020840135915060408401356118f6816118aa565b809150509250925092565b803561ffff8116811461191357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561195157611951611918565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561198057611980611918565b604052919050565b600080600080600060a086880312156119a057600080fd5b6119a986611901565b945060208087013594506040870135935060608701359250608087013567ffffffffffffffff808211156119dc57600080fd5b908801906060828b0312156119f057600080fd5b6119f861192e565b823581528383013584820152604083013582811115611a1657600080fd5b8084019350508a601f840112611a2b57600080fd5b823582811115611a3d57611a3d611918565b611a4f601f8201601f19168601611957565b92508083528b85828601011115611a6557600080fd5b8085850186850137600085828501015250816040820152809450505050509295509295909350565b600060208284031215611a9f57600080fd5b8135611aaa816118aa565b9392505050565b60008060408385031215611ac457600080fd5b8235611acf816118aa565b946020939093013593505050565b600060208284031215611aef57600080fd5b5035919050565b80151581146114c357600080fd5b60008060408385031215611b1757600080fd5b8235611b22816118aa565b91506020830135611b3281611af6565b809150509250929050565b600080600060608486031215611b5257600080fd5b8335611b5d816118aa565b9250602084013591506040840135600f81900b81146118f657600080fd5b60008083601f840112611b8d57600080fd5b50813567ffffffffffffffff811115611ba557600080fd5b602083019150836020828501011115611bbd57600080fd5b9250929050565b60008060008060608587031215611bda57600080fd5b8435611be5816118aa565b93506020850135611bf5816118aa565b9250604085013567ffffffffffffffff811115611c1157600080fd5b611c1d87828801611b7b565b95989497509550505050565b60008060008060808587031215611c3f57600080fd5b8435611c4a816118aa565b9350611c5860208601611901565b92506040850135611c68816118aa565b9150606085013569ffffffffffffffffffff81168114611c8757600080fd5b939692955090935050565b60008060008060608587031215611ca857600080fd5b8435611cb3816118aa565b935060208501359250604085013567ffffffffffffffff811115611c1157600080fd5b6000815180845260005b81811015611cfc57602081850181015186830182015201611ce0565b81811115611d0e576000602083870101525b50601f01601f19169290920160200192915050565b821515815260406020820152600061174d6040830184611cd6565b600080600060608486031215611d5357600080fd5b8335611d5e816118aa565b92506020840135611d6e816118aa565b929592945050506040919091013590565b600060208284031215611d9157600080fd5b8151611aaa81611af6565b61ffff881681528660208201528560408201526001600160a01b038516606082015283608082015260e060a08201526000611dda60e0830185611cd6565b82810360c08401528351815260208401516020820152604084015160606040830152611e096060830182611cd6565b9b9a5050505050505050505050565b600060208284031215611e2a57600080fd5b5051919050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611e92578160001904821115611e7857611e78611e41565b80851615611e8557918102915b93841c9390800290611e5c565b509250929050565b600082611ea9575060016112ea565b81611eb6575060006112ea565b8160018114611ecc5760028114611ed657611ef2565b60019150506112ea565b60ff841115611ee757611ee7611e41565b50506001821b6112ea565b5060208310610133831016604e8410600b8410161715611f15575081810a6112ea565b611f1f8383611e57565b8060001904821115611f3357611f33611e41565b029392505050565b6000611aaa69ffffffffffffffffffff841683611e9a565b6000816000190483118215151615611f6d57611f6d611e41565b500290565b600082611f8f57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611fa657611fa6611e41565b50039056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212202a416d3237ff2a6b496681e93d599784a0e840a985a5cfd113aea0388a1210c664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeemLocal(uint16,uint256,uint256,uint256,(uint256,uint256,bytes))": {
        "params": {
          "amount": "quantity of LP tokens to redeem",
          "dstChainId": "the chainId to remove liquidity",
          "dstPoolId": "the destination poolId",
          "srcPoolId": "the source poolId",
          "txParams": "adpater parameters https://layerzero.gitbook.io/docs/technical-reference/mainnet/supported-chain-ids"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12551,
        "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
        "label": "feeBps",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 12557,
        "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
        "label": "pools",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_contract(IStargatePool)4787,t_struct(PoolInfo)12540_storage)"
      },
      {
        "astId": 12561,
        "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
        "label": "allowedRedeemers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IOracle)4182": {
        "encoding": "inplace",
        "label": "contract IOracle",
        "numberOfBytes": "20"
      },
      "t_contract(IStargatePool)4787": {
        "encoding": "inplace",
        "label": "contract IStargatePool",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_contract(IStargatePool)4787,t_struct(PoolInfo)12540_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IStargatePool)4787",
        "label": "mapping(contract IStargatePool => struct BaseStargateLpMimPool.PoolInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(PoolInfo)12540_storage"
      },
      "t_struct(PoolInfo)12540_storage": {
        "encoding": "inplace",
        "label": "struct BaseStargateLpMimPool.PoolInfo",
        "members": [
          {
            "astId": 12534,
            "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
            "label": "poolId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 12537,
            "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
            "label": "oracle",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IOracle)4182"
          },
          {
            "astId": 12539,
            "contract": "contracts/stargate/MainnetStargateLpMimPool.sol:MainnetStargateLpMimPool",
            "label": "oracleDecimalsMultipler",
            "offset": 22,
            "slot": "0",
            "type": "t_uint80"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint80": {
        "encoding": "inplace",
        "label": "uint80",
        "numberOfBytes": "10"
      }
    }
  }
}