{
  "address": "0xaB137bb12e93fEdB8B639771c4C4fE29aC138Ee6",
  "abi": [
    {
      "inputs": [],
      "name": "YVDAI",
      "outputs": [
        {
          "internalType": "contract IYearnVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xdc8c93ae33e6d7241dc3bfc87d4a60874db39bcc10b02aa54148acc3ed74121a",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0xaB137bb12e93fEdB8B639771c4C4fE29aC138Ee6",
    "transactionIndex": 216,
    "gasUsed": "257132",
    "logsBloom": "0x
    "blockHash": "0xb6bd95e21b75ac4921c3f968dd17ff3d53063fd65afb09697fe1858382f5d47e",
    "transactionHash": "0xdc8c93ae33e6d7241dc3bfc87d4a60874db39bcc10b02aa54148acc3ed74121a",
    "logs": [],
    "blockNumber": 14572314,
    "cumulativeGasUsed": "17163659",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b95fa71dedd45896c1d1373fe4dd836a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"YVDAI\",\"outputs\":[{\"internalType\":\"contract IYearnVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/YVDAIOracle.sol\":\"YVDAIOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":690},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.6.12;\\r\\n\\r\\ninterface IOracle {\\r\\n    /// @notice Get the latest exchange rate.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the last exchange rate without any state changes.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    /// @notice Returns a human readable (short) name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable symbol name about this oracle.\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    /// @notice Returns a human readable name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable name about this oracle.\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x724e4079842c80db8202bbd75fd9ccee057012cf82f5615898f76ce550ff7f46\",\"license\":\"MIT\"},\"contracts/oracles/YVDAIOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// solhint-disable func-name-mixedcase\\r\\n\\r\\npragma solidity 0.8.4;\\r\\nimport \\\"../interfaces/IOracle.sol\\\";\\r\\n\\r\\n// Chainlink Aggregator\\r\\n\\r\\ninterface IAggregator {\\r\\n    function latestAnswer() external view returns (int256 answer);\\r\\n}\\r\\n\\r\\ninterface IYearnVault {\\r\\n    function pricePerShare() external view returns (uint256 price);\\r\\n}\\r\\n\\r\\ninterface ICurvePool {\\r\\n    function get_virtual_price() external view returns (uint256 price);\\r\\n    function lp_price() external view returns (uint256 price);\\r\\n}\\r\\n\\r\\ncontract YVDAIOracle is IOracle {\\r\\n    IYearnVault public constant YVDAI = IYearnVault(0xdA816459F1AB5631232FE5e97a05BBBb94970c95);\\r\\n\\r\\n    function _get() internal view returns (uint256) {\\r\\n        return 1e36 / YVDAI.pricePerShare();\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (true, _get());\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (true, _get());\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\r\\n        (, rate) = peek(data);\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function name(bytes calldata) public pure override returns (string memory) {\\r\\n        return \\\"Chainlink YVDAI\\\";\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\r\\n        return \\\"LINK/YVDAI\\\";\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x75e6680904b7fc9682c18b687718415bf0af33e1cd582f91552b088e2458343a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063d6d7d52511610050578063d6d7d5251461013c578063dcdc5d3014610166578063eeb8a8d31461013c57600080fd5b8063c699c4d614610077578063d39bbef0146100d4578063d568866c146100f5575b600080fd5b6100be610085366004610284565b505060408051808201909152600a81527f4c494e4b2f595644414900000000000000000000000000000000000000000000602082015290565b6040516100cb9190610309565b60405180910390f35b6100e76100e2366004610284565b6101a6565b6040519081526020016100cb565b6100be610103366004610284565b505060408051808201909152600f81527f436861696e6c696e6b2059564441490000000000000000000000000000000000602082015290565b61014f61014a366004610284565b6101ba565b6040805192151583526020830191909152016100cb565b61018173da816459f1ab5631232fe5e97a05bbbb94970c9581565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cb565b60006101b283836101ba565b949350505050565b60008060016101c76101d2565b915091509250929050565b600073da816459f1ab5631232fe5e97a05bbbb94970c9573ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026691906102f1565b61027f906ec097ce7bc90715b34b9f100000000061035c565b905090565b60008060208385031215610296578182fd5b823567ffffffffffffffff808211156102ad578384fd5b818501915085601f8301126102c0578384fd5b8135818111156102ce578485fd5b8660208285010111156102df578485fd5b60209290920196919550909350505050565b600060208284031215610302578081fd5b5051919050565b6000602080835283518082850152825b8181101561033557858101830151858201604001528201610319565b818111156103465783604083870101525b50601f01601f1916929092016040019392505050565b60008261037757634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220813dc1f9e64eb77cd00cdcb6c0d0b7c0e243a3e51c8918b061e273b7efac561464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063d6d7d52511610050578063d6d7d5251461013c578063dcdc5d3014610166578063eeb8a8d31461013c57600080fd5b8063c699c4d614610077578063d39bbef0146100d4578063d568866c146100f5575b600080fd5b6100be610085366004610284565b505060408051808201909152600a81527f4c494e4b2f595644414900000000000000000000000000000000000000000000602082015290565b6040516100cb9190610309565b60405180910390f35b6100e76100e2366004610284565b6101a6565b6040519081526020016100cb565b6100be610103366004610284565b505060408051808201909152600f81527f436861696e6c696e6b2059564441490000000000000000000000000000000000602082015290565b61014f61014a366004610284565b6101ba565b6040805192151583526020830191909152016100cb565b61018173da816459f1ab5631232fe5e97a05bbbb94970c9581565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cb565b60006101b283836101ba565b949350505050565b60008060016101c76101d2565b915091509250929050565b600073da816459f1ab5631232fe5e97a05bbbb94970c9573ffffffffffffffffffffffffffffffffffffffff166399530b066040518163ffffffff1660e01b815260040160206040518083038186803b15801561022e57600080fd5b505afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026691906102f1565b61027f906ec097ce7bc90715b34b9f100000000061035c565b905090565b60008060208385031215610296578182fd5b823567ffffffffffffffff808211156102ad578384fd5b818501915085601f8301126102c0578384fd5b8135818111156102ce578485fd5b8660208285010111156102df578485fd5b60209290920196919550909350505050565b600060208284031215610302578081fd5b5051919050565b6000602080835283518082850152825b8181101561033557858101830151858201604001528201610319565b818111156103465783604083870101525b50601f01601f1916929092016040019392505050565b60008261037757634e487b7160e01b81526012600452602481fd5b50049056fea2646970667358221220813dc1f9e64eb77cd00cdcb6c0d0b7c0e243a3e51c8918b061e273b7efac561464736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}