{
  "address": "0x750E9887425F9f325504Fe69B7173a4cacD55351",
  "abi": [
    {
      "inputs": [],
      "name": "BTCUSD",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x842649fc15f00a553ff285841e6e70da5f5d222825ba228d38eab6d946bdf960",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0x750E9887425F9f325504Fe69B7173a4cacD55351",
    "transactionIndex": 373,
    "gasUsed": "409212",
    "logsBloom": "0x
    "blockHash": "0x51c53eb0f6906b9d8e032a8cd2aab89b0eccc1500ce75b97d0b40d75b9132724",
    "transactionHash": "0x842649fc15f00a553ff285841e6e70da5f5d222825ba228d38eab6d946bdf960",
    "logs": [],
    "blockNumber": 13876363,
    "cumulativeGasUsed": "20175830",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a775fa458d51d64938925ff757c8d09c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BTCUSD\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/WbtcOracle.sol\":\"WbtcOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.6.12;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x558a9784fc707121492ac785a12d99b4af8d00d87bee215eeb9e40be874090f3\",\"license\":\"MIT\"},\"contracts/oracles/WbtcOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport \\\"../interfaces/IOracle.sol\\\";\\n\\n// Chainlink Aggregator\\n\\ninterface IAggregator {\\n    function latestAnswer() external view returns (int256 answer);\\n}\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\\ncontract WbtcOracle is IOracle {\\n    IAggregator constant public BTCUSD = IAggregator(0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c);\\n\\n    // Calculates the lastest exchange rate\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\n    function _get() internal view returns (uint256) {\\n\\n        return 1e16 / uint256(BTCUSD.latestAnswer());\\n    }\\n\\n    // Get the latest exchange rate\\n    /// @inheritdoc IOracle\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the last exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the current spot exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\n        (, rate) = peek(data);\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function name(bytes calldata) public pure override returns (string memory) {\\n        return \\\"Chainlink BTC\\\";\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\n        return \\\"LINK/BTC\\\";\\n    }\\n}\\n\",\"keccak256\":\"0x3c9adda56b3ec087d1c7143b76401cc5aad0d3d959a2268a88f90f611a7f1570\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610675806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063c699c4d614610067578063d39bbef014610097578063d568866c146100c7578063d6d7d525146100f7578063eeb8a8d314610128578063fc2650d814610159575b600080fd5b610081600480360381019061007c9190610362565b610177565b60405161008e9190610448565b60405180910390f35b6100b160048036038101906100ac9190610362565b6101b7565b6040516100be9190610483565b60405180910390f35b6100e160048036038101906100dc9190610362565b6101cf565b6040516100ee9190610448565b60405180910390f35b610111600480360381019061010c9190610362565b61020f565b60405161011f9291906104b9565b60405180910390f35b610142600480360381019061013d9190610362565b610227565b6040516101509291906104b9565b60405180910390f35b61016161023f565b60405161016e9190610561565b60405180910390f35b60606040518060400160405280600881526020017f4c494e4b2f425443000000000000000000000000000000000000000000000000815250905092915050565b60006101c38383610227565b90508091505092915050565b60606040518060400160405280600d81526020017f436861696e6c696e6b2042544300000000000000000000000000000000000000815250905092915050565b600080600161021c610257565b915091509250929050565b6000806001610234610257565b915091509250929050565b73f4030086522a5beea4988f8ca5b36dbc97bee88c81565b600073f4030086522a5beea4988f8ca5b36dbc97bee88c73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc91906105b2565b662386f26fc100006102ee919061060e565b905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610322576103216102fd565b5b8235905067ffffffffffffffff81111561033f5761033e610302565b5b60208301915083600182028301111561035b5761035a610307565b5b9250929050565b60008060208385031215610379576103786102f3565b5b600083013567ffffffffffffffff811115610397576103966102f8565b5b6103a38582860161030c565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103e95780820151818401526020810190506103ce565b838111156103f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061041a826103af565b61042481856103ba565b93506104348185602086016103cb565b61043d816103fe565b840191505092915050565b60006020820190508181036000830152610462818461040f565b905092915050565b6000819050919050565b61047d8161046a565b82525050565b60006020820190506104986000830184610474565b92915050565b60008115159050919050565b6104b38161049e565b82525050565b60006040820190506104ce60008301856104aa565b6104db6020830184610474565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052761052261051d846104e2565b610502565b6104e2565b9050919050565b60006105398261050c565b9050919050565b600061054b8261052e565b9050919050565b61055b81610540565b82525050565b60006020820190506105766000830184610552565b92915050565b6000819050919050565b61058f8161057c565b811461059a57600080fd5b50565b6000815190506105ac81610586565b92915050565b6000602082840312156105c8576105c76102f3565b5b60006105d68482850161059d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106198261046a565b91506106248361046a565b925082610634576106336105df565b5b82820490509291505056fea2646970667358221220e26bc933d55c850916d7b9968718a3a17c062a3a75c17dbfb315bb8609020f0364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063c699c4d614610067578063d39bbef014610097578063d568866c146100c7578063d6d7d525146100f7578063eeb8a8d314610128578063fc2650d814610159575b600080fd5b610081600480360381019061007c9190610362565b610177565b60405161008e9190610448565b60405180910390f35b6100b160048036038101906100ac9190610362565b6101b7565b6040516100be9190610483565b60405180910390f35b6100e160048036038101906100dc9190610362565b6101cf565b6040516100ee9190610448565b60405180910390f35b610111600480360381019061010c9190610362565b61020f565b60405161011f9291906104b9565b60405180910390f35b610142600480360381019061013d9190610362565b610227565b6040516101509291906104b9565b60405180910390f35b61016161023f565b60405161016e9190610561565b60405180910390f35b60606040518060400160405280600881526020017f4c494e4b2f425443000000000000000000000000000000000000000000000000815250905092915050565b60006101c38383610227565b90508091505092915050565b60606040518060400160405280600d81526020017f436861696e6c696e6b2042544300000000000000000000000000000000000000815250905092915050565b600080600161021c610257565b915091509250929050565b6000806001610234610257565b915091509250929050565b73f4030086522a5beea4988f8ca5b36dbc97bee88c81565b600073f4030086522a5beea4988f8ca5b36dbc97bee88c73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc91906105b2565b662386f26fc100006102ee919061060e565b905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610322576103216102fd565b5b8235905067ffffffffffffffff81111561033f5761033e610302565b5b60208301915083600182028301111561035b5761035a610307565b5b9250929050565b60008060208385031215610379576103786102f3565b5b600083013567ffffffffffffffff811115610397576103966102f8565b5b6103a38582860161030c565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103e95780820151818401526020810190506103ce565b838111156103f8576000848401525b50505050565b6000601f19601f8301169050919050565b600061041a826103af565b61042481856103ba565b93506104348185602086016103cb565b61043d816103fe565b840191505092915050565b60006020820190508181036000830152610462818461040f565b905092915050565b6000819050919050565b61047d8161046a565b82525050565b60006020820190506104986000830184610474565b92915050565b60008115159050919050565b6104b38161049e565b82525050565b60006040820190506104ce60008301856104aa565b6104db6020830184610474565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052761052261051d846104e2565b610502565b6104e2565b9050919050565b60006105398261050c565b9050919050565b600061054b8261052e565b9050919050565b61055b81610540565b82525050565b60006020820190506105766000830184610552565b92915050565b6000819050919050565b61058f8161057c565b811461059a57600080fd5b50565b6000815190506105ac81610586565b92915050565b6000602082840312156105c8576105c76102f3565b5b60006105d68482850161059d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006106198261046a565b91506106248361046a565b925082610634576106336105df565b5b82820490509291505056fea2646970667358221220e26bc933d55c850916d7b9968718a3a17c062a3a75c17dbfb315bb8609020f0364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}