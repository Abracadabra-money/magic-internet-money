{
  "address": "0x9732D3Ee0f185D7c2D610E30DC5de28EF68Ad7c9",
  "abi": [
    {
      "inputs": [],
      "name": "LP_ORACLE",
      "outputs": [
        {
          "internalType": "contract ILPOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x8edb896ed4bab83f0d3d4ea82f1c8c34e9598facaaf38a6ece0740280fc5c853",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0x9732D3Ee0f185D7c2D610E30DC5de28EF68Ad7c9",
    "transactionIndex": 2,
    "gasUsed": "406248",
    "logsBloom": "0x
    "blockHash": "0x8f9312fb98800db5aaeb56036169b8a8daa619221b8579903d101e9ca07b88c1",
    "transactionHash": "0x8edb896ed4bab83f0d3d4ea82f1c8c34e9598facaaf38a6ece0740280fc5c853",
    "logs": [],
    "blockNumber": 13295445,
    "cumulativeGasUsed": "696669",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e9b5d8c945560f7b6d7df07395a9a069",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LP_ORACLE\",\"outputs\":[{\"internalType\":\"contract ILPOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/3CryptoOracle.sol\":\"ThreeCryptoOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.6.12;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x558a9784fc707121492ac785a12d99b4af8d00d87bee215eeb9e40be874090f3\",\"license\":\"MIT\"},\"contracts/oracles/3CryptoOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\nimport \\\"../interfaces/IOracle.sol\\\";\\n\\n// Chainlink Aggregator\\n\\n\\ninterface ILPOracle {\\n    function lp_price() external view returns (uint256 price);\\n}\\n\\ncontract ThreeCryptoOracle is IOracle {\\n    ILPOracle constant public LP_ORACLE = ILPOracle(0xE8b2989276E2Ca8FDEA2268E3551b2b4B2418950);\\n\\n    // Calculates the lastest exchange rate\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\n    function _get() internal view returns (uint256) {\\n        return 1e36 / LP_ORACLE.lp_price();\\n    }\\n\\n    // Get the latest exchange rate\\n    /// @inheritdoc IOracle\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the last exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the current spot exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\n        (, rate) = peek(data);\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function name(bytes calldata) public pure override returns (string memory) {\\n        return \\\"3Crv\\\";\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\n        return \\\"3crv\\\";\\n    }\\n}\",\"keccak256\":\"0x6cd09124f9119d682df4f04a92e4970d9797add664558526ff95b74445cf1520\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610668806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063c699c4d614610067578063d39bbef014610097578063d568866c146100c7578063d6d7d525146100f7578063de6dbbb214610128578063eeb8a8d314610146575b600080fd5b610081600480360381019061007c9190610375565b610177565b60405161008e9190610499565b60405180910390f35b6100b160048036038101906100ac9190610375565b6101b7565b6040516100be91906104bb565b60405180910390f35b6100e160048036038101906100dc9190610375565b6101cf565b6040516100ee9190610499565b60405180910390f35b610111600480360381019061010c9190610375565b61020f565b60405161011f929190610455565b60405180910390f35b610130610227565b60405161013d919061047e565b60405180910390f35b610160600480360381019061015b9190610375565b61023f565b60405161016e929190610455565b60405180910390f35b60606040518060400160405280600481526020017f3363727600000000000000000000000000000000000000000000000000000000815250905092915050565b60006101c3838361023f565b90508091505092915050565b60606040518060400160405280600481526020017f3343727600000000000000000000000000000000000000000000000000000000815250905092915050565b600080600161021c610257565b915091509250929050565b73e8b2989276e2ca8fdea2268e3551b2b4b241895081565b600080600161024c610257565b915091509250929050565b600073e8b2989276e2ca8fdea2268e3551b2b4b241895073ffffffffffffffffffffffffffffffffffffffff166354f0f7d56040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb91906103c2565b6ec097ce7bc90715b34b9f100000000061030591906104f2565b905090565b60008083601f8401126103205761031f6105f6565b5b8235905067ffffffffffffffff81111561033d5761033c6105f1565b5b602083019150836001820283011115610359576103586105fb565b5b9250929050565b60008151905061036f8161061b565b92915050565b6000806020838503121561038c5761038b610605565b5b600083013567ffffffffffffffff8111156103aa576103a9610600565b5b6103b68582860161030a565b92509250509250929050565b6000602082840312156103d8576103d7610605565b5b60006103e684828501610360565b91505092915050565b6103f881610523565b82525050565b61040781610559565b82525050565b6000610418826104d6565b61042281856104e1565b935061043281856020860161058f565b61043b8161060a565b840191505092915050565b61044f8161054f565b82525050565b600060408201905061046a60008301856103ef565b6104776020830184610446565b9392505050565b600060208201905061049360008301846103fe565b92915050565b600060208201905081810360008301526104b3818461040d565b905092915050565b60006020820190506104d06000830184610446565b92915050565b600081519050919050565b600082825260208201905092915050565b60006104fd8261054f565b91506105088361054f565b925082610518576105176105c2565b5b828204905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105648261056b565b9050919050565b60006105768261057d565b9050919050565b60006105888261052f565b9050919050565b60005b838110156105ad578082015181840152602081019050610592565b838111156105bc576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106248161054f565b811461062f57600080fd5b5056fea2646970667358221220521177ae2d7034fe3765f091b920c41d37e09d0738c8cf9ec1e6e4934d47602364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063c699c4d614610067578063d39bbef014610097578063d568866c146100c7578063d6d7d525146100f7578063de6dbbb214610128578063eeb8a8d314610146575b600080fd5b610081600480360381019061007c9190610375565b610177565b60405161008e9190610499565b60405180910390f35b6100b160048036038101906100ac9190610375565b6101b7565b6040516100be91906104bb565b60405180910390f35b6100e160048036038101906100dc9190610375565b6101cf565b6040516100ee9190610499565b60405180910390f35b610111600480360381019061010c9190610375565b61020f565b60405161011f929190610455565b60405180910390f35b610130610227565b60405161013d919061047e565b60405180910390f35b610160600480360381019061015b9190610375565b61023f565b60405161016e929190610455565b60405180910390f35b60606040518060400160405280600481526020017f3363727600000000000000000000000000000000000000000000000000000000815250905092915050565b60006101c3838361023f565b90508091505092915050565b60606040518060400160405280600481526020017f3343727600000000000000000000000000000000000000000000000000000000815250905092915050565b600080600161021c610257565b915091509250929050565b73e8b2989276e2ca8fdea2268e3551b2b4b241895081565b600080600161024c610257565b915091509250929050565b600073e8b2989276e2ca8fdea2268e3551b2b4b241895073ffffffffffffffffffffffffffffffffffffffff166354f0f7d56040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b357600080fd5b505afa1580156102c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102eb91906103c2565b6ec097ce7bc90715b34b9f100000000061030591906104f2565b905090565b60008083601f8401126103205761031f6105f6565b5b8235905067ffffffffffffffff81111561033d5761033c6105f1565b5b602083019150836001820283011115610359576103586105fb565b5b9250929050565b60008151905061036f8161061b565b92915050565b6000806020838503121561038c5761038b610605565b5b600083013567ffffffffffffffff8111156103aa576103a9610600565b5b6103b68582860161030a565b92509250509250929050565b6000602082840312156103d8576103d7610605565b5b60006103e684828501610360565b91505092915050565b6103f881610523565b82525050565b61040781610559565b82525050565b6000610418826104d6565b61042281856104e1565b935061043281856020860161058f565b61043b8161060a565b840191505092915050565b61044f8161054f565b82525050565b600060408201905061046a60008301856103ef565b6104776020830184610446565b9392505050565b600060208201905061049360008301846103fe565b92915050565b600060208201905081810360008301526104b3818461040d565b905092915050565b60006020820190506104d06000830184610446565b92915050565b600081519050919050565b600082825260208201905092915050565b60006104fd8261054f565b91506105088361054f565b925082610518576105176105c2565b5b828204905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105648261056b565b9050919050565b60006105768261057d565b9050919050565b60006105888261052f565b9050919050565b60005b838110156105ad578082015181840152602081019050610592565b838111156105bc576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106248161054f565b811461062f57600080fd5b5056fea2646970667358221220521177ae2d7034fe3765f091b920c41d37e09d0738c8cf9ec1e6e4934d47602364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}