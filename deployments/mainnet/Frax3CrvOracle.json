{
  "address": "0xD9bA8821e9EeFC89cBc80DA1EB5e3518BE383E63",
  "abi": [
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FRAX",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frax3crv",
      "outputs": [
        {
          "internalType": "contract ICurvePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xe8a38a96195d82cd83b42836c544470ddf200bd5658fb76f05f523713420b6cf",
  "receipt": {
    "to": null,
    "from": "0xfB3485c2e209A5cfBDC1447674256578f1A80eE3",
    "contractAddress": "0xD9bA8821e9EeFC89cBc80DA1EB5e3518BE383E63",
    "transactionIndex": 49,
    "gasUsed": "660328",
    "logsBloom": "0x
    "blockHash": "0x62f73b87745f4b435575cc5e27f16e4cf7f76912f0d5a5f929b533c558a334ce",
    "transactionHash": "0xe8a38a96195d82cd83b42836c544470ddf200bd5658fb76f05f523713420b6cf",
    "logs": [],
    "blockNumber": 14057328,
    "cumulativeGasUsed": "3854486",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "0f30bb04c3f5e9fa54b1153fec2dc0da",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FRAX\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frax3crv\",\"outputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/Frax3CrvOracle.sol\":\"Frax3CrvOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >= 0.6.12;\\r\\n\\r\\ninterface IOracle {\\r\\n    /// @notice Get the latest exchange rate.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the last exchange rate without any state changes.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    /// @notice Returns a human readable (short) name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable symbol name about this oracle.\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    /// @notice Returns a human readable name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable name about this oracle.\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xb38ed21d4b50d5a697924763ad1eab576986bf4fdc206b35e718a9cc29f85b3b\",\"license\":\"MIT\"},\"contracts/oracles/Frax3CrvOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.4;\\r\\nimport \\\"../interfaces/IOracle.sol\\\";\\r\\n\\r\\n// Chainlink Aggregator\\r\\n\\r\\ninterface IAggregator {\\r\\n    function latestAnswer() external view returns (int256 answer);\\r\\n}\\r\\n\\r\\ninterface IYearnVault {\\r\\n    function pricePerShare() external view returns (uint256 price);\\r\\n}\\r\\n\\r\\ninterface ICurvePool {\\r\\n    function get_virtual_price() external view returns (uint256 price);\\r\\n}\\r\\n\\r\\ncontract Frax3CrvOracle is IOracle {\\r\\n    ICurvePool public constant frax3crv = ICurvePool(0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B);\\r\\n    IAggregator public constant FRAX = IAggregator(0xB9E1E3A9feFf48998E45Fa90847ed4D467E8BcfD);\\r\\n    IAggregator public constant DAI = IAggregator(0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9);\\r\\n    IAggregator public constant USDC = IAggregator(0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6);\\r\\n    IAggregator public constant USDT = IAggregator(0x3E7d1eAB13ad0104d2750B8863b489D65364e32D);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the smallest of two numbers.\\r\\n     */\\r\\n    // FROM: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/6d97f0919547df11be9443b54af2d90631eaa733/contracts/utils/math/Math.sol\\r\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return a < b ? a : b;\\r\\n    }\\r\\n\\r\\n    // Calculates the lastest exchange rate\\r\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\r\\n    function _get() internal view returns (uint256) {\\r\\n        // As the price should never be negative, the unchecked conversion is acceptable\\r\\n        uint256 minStable = min(\\r\\n            uint256(DAI.latestAnswer()),\\r\\n            min(uint256(USDC.latestAnswer()), min(uint256(USDT.latestAnswer()), uint256(FRAX.latestAnswer())))\\r\\n        );\\r\\n\\r\\n        uint256 yVCurvePrice = frax3crv.get_virtual_price() * minStable;\\r\\n\\r\\n        return 1e44 / yVCurvePrice;\\r\\n    }\\r\\n\\r\\n    // Get the latest exchange rate\\r\\n    /// @inheritdoc IOracle\\r\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (true, _get());\\r\\n    }\\r\\n\\r\\n    // Check the last exchange rate without any state changes\\r\\n    /// @inheritdoc IOracle\\r\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (true, _get());\\r\\n    }\\r\\n\\r\\n    // Check the current spot exchange rate without any state changes\\r\\n    /// @inheritdoc IOracle\\r\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\r\\n        (, rate) = peek(data);\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function name(bytes calldata) public pure override returns (string memory) {\\r\\n        return \\\"Chainlink Frax3Crv\\\";\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IOracle\\r\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\r\\n        return \\\"LINK/Frax3crv\\\";\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x10e1fd95a42e649066f276b4e1d6c56ce73646dc9727635ad492ff10fcb2ac5c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b01806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d39bbef011610066578063d39bbef01461014b578063d568866c1461017b578063d6d7d525146101ab578063e0bab4c4146101dc578063eeb8a8d3146101fa5761009e565b80637f143a67146100a357806389a30271146100c1578063b0e4556f146100df578063c54e44eb146100fd578063c699c4d61461011b575b600080fd5b6100ab61022b565b6040516100b89190610874565b60405180910390f35b6100c9610243565b6040516100d69190610859565b60405180910390f35b6100e761025b565b6040516100f49190610859565b60405180910390f35b610105610273565b6040516101129190610859565b60405180910390f35b61013560048036038101906101309190610724565b61028b565b604051610142919061088f565b60405180910390f35b61016560048036038101906101609190610724565b6102cb565b60405161017291906108b1565b60405180910390f35b61019560048036038101906101909190610724565b6102e3565b6040516101a2919061088f565b60405180910390f35b6101c560048036038101906101c09190610724565b610323565b6040516101d3929190610830565b60405180910390f35b6101e461033b565b6040516101f19190610859565b60405180910390f35b610214600480360381019061020f9190610724565b610353565b604051610222929190610830565b60405180910390f35b73d632f22692fac7611d2aa1c0d552930d43caed3b81565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b73b9e1e3a9feff48998e45fa90847ed4d467e8bcfd81565b733e7d1eab13ad0104d2750b8863b489d65364e32d81565b60606040518060400160405280600d81526020017f4c494e4b2f467261783363727600000000000000000000000000000000000000815250905092915050565b60006102d78383610353565b90508091505092915050565b60606040518060400160405280601281526020017f436861696e6c696e6b2046726178334372760000000000000000000000000000815250905092915050565b600080600161033061036b565b915091509250929050565b73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee981565b600080600161036061036b565b915091509250929050565b6000806105ce73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610769565b6105c9738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561046057600080fd5b505afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610769565b6105c4733e7d1eab13ad0104d2750b8863b489d65364e32d73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f557600080fd5b505afa158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190610769565b73b9e1e3a9feff48998e45fa90847ed4d467e8bcfd73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610769565b610697565b610697565b610697565b905060008173d632f22692fac7611d2aa1c0d552930d43caed3b73ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190610792565b61066f9190610919565b90508072047bf19673df52e37f2410011d10000000000061069091906108e8565b9250505090565b60008183106106a657816106a8565b825b905092915050565b60008083601f8401126106c257600080fd5b8235905067ffffffffffffffff8111156106db57600080fd5b6020830191508360018202830111156106f357600080fd5b9250929050565b60008151905061070981610a9d565b92915050565b60008151905061071e81610ab4565b92915050565b6000806020838503121561073757600080fd5b600083013567ffffffffffffffff81111561075157600080fd5b61075d858286016106b0565b92509250509250929050565b60006020828403121561077b57600080fd5b6000610789848285016106fa565b91505092915050565b6000602082840312156107a457600080fd5b60006107b28482850161070f565b91505092915050565b6107c481610973565b82525050565b6107d3816109b3565b82525050565b6107e2816109d7565b82525050565b60006107f3826108cc565b6107fd81856108d7565b935061080d8185602086016109fb565b61081681610a8c565b840191505092915050565b61082a816109a9565b82525050565b600060408201905061084560008301856107bb565b6108526020830184610821565b9392505050565b600060208201905061086e60008301846107ca565b92915050565b600060208201905061088960008301846107d9565b92915050565b600060208201905081810360008301526108a981846107e8565b905092915050565b60006020820190506108c66000830184610821565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108f3826109a9565b91506108fe836109a9565b92508261090e5761090d610a5d565b5b828204905092915050565b6000610924826109a9565b915061092f836109a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561096857610967610a2e565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109be826109c5565b9050919050565b60006109d082610989565b9050919050565b60006109e2826109e9565b9050919050565b60006109f482610989565b9050919050565b60005b83811015610a195780820151818401526020810190506109fe565b83811115610a28576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b610aa68161097f565b8114610ab157600080fd5b50565b610abd816109a9565b8114610ac857600080fd5b5056fea26469706673582212205e456f21ec004dea94617bcd0381428524692df6948a1067115cdd7a5245c61764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063d39bbef011610066578063d39bbef01461014b578063d568866c1461017b578063d6d7d525146101ab578063e0bab4c4146101dc578063eeb8a8d3146101fa5761009e565b80637f143a67146100a357806389a30271146100c1578063b0e4556f146100df578063c54e44eb146100fd578063c699c4d61461011b575b600080fd5b6100ab61022b565b6040516100b89190610874565b60405180910390f35b6100c9610243565b6040516100d69190610859565b60405180910390f35b6100e761025b565b6040516100f49190610859565b60405180910390f35b610105610273565b6040516101129190610859565b60405180910390f35b61013560048036038101906101309190610724565b61028b565b604051610142919061088f565b60405180910390f35b61016560048036038101906101609190610724565b6102cb565b60405161017291906108b1565b60405180910390f35b61019560048036038101906101909190610724565b6102e3565b6040516101a2919061088f565b60405180910390f35b6101c560048036038101906101c09190610724565b610323565b6040516101d3929190610830565b60405180910390f35b6101e461033b565b6040516101f19190610859565b60405180910390f35b610214600480360381019061020f9190610724565b610353565b604051610222929190610830565b60405180910390f35b73d632f22692fac7611d2aa1c0d552930d43caed3b81565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b73b9e1e3a9feff48998e45fa90847ed4d467e8bcfd81565b733e7d1eab13ad0104d2750b8863b489d65364e32d81565b60606040518060400160405280600d81526020017f4c494e4b2f467261783363727600000000000000000000000000000000000000815250905092915050565b60006102d78383610353565b90508091505092915050565b60606040518060400160405280601281526020017f436861696e6c696e6b2046726178334372760000000000000000000000000000815250905092915050565b600080600161033061036b565b915091509250929050565b73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee981565b600080600161036061036b565b915091509250929050565b6000806105ce73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103cb57600080fd5b505afa1580156103df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104039190610769565b6105c9738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561046057600080fd5b505afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610769565b6105c4733e7d1eab13ad0104d2750b8863b489d65364e32d73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f557600080fd5b505afa158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190610769565b73b9e1e3a9feff48998e45fa90847ed4d467e8bcfd73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610769565b610697565b610697565b610697565b905060008173d632f22692fac7611d2aa1c0d552930d43caed3b73ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561062d57600080fd5b505afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190610792565b61066f9190610919565b90508072047bf19673df52e37f2410011d10000000000061069091906108e8565b9250505090565b60008183106106a657816106a8565b825b905092915050565b60008083601f8401126106c257600080fd5b8235905067ffffffffffffffff8111156106db57600080fd5b6020830191508360018202830111156106f357600080fd5b9250929050565b60008151905061070981610a9d565b92915050565b60008151905061071e81610ab4565b92915050565b6000806020838503121561073757600080fd5b600083013567ffffffffffffffff81111561075157600080fd5b61075d858286016106b0565b92509250509250929050565b60006020828403121561077b57600080fd5b6000610789848285016106fa565b91505092915050565b6000602082840312156107a457600080fd5b60006107b28482850161070f565b91505092915050565b6107c481610973565b82525050565b6107d3816109b3565b82525050565b6107e2816109d7565b82525050565b60006107f3826108cc565b6107fd81856108d7565b935061080d8185602086016109fb565b61081681610a8c565b840191505092915050565b61082a816109a9565b82525050565b600060408201905061084560008301856107bb565b6108526020830184610821565b9392505050565b600060208201905061086e60008301846107ca565b92915050565b600060208201905061088960008301846107d9565b92915050565b600060208201905081810360008301526108a981846107e8565b905092915050565b60006020820190506108c66000830184610821565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108f3826109a9565b91506108fe836109a9565b92508261090e5761090d610a5d565b5b828204905092915050565b6000610924826109a9565b915061092f836109a9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561096857610967610a2e565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109be826109c5565b9050919050565b60006109d082610989565b9050919050565b60006109e2826109e9565b9050919050565b60006109f482610989565b9050919050565b60005b83811015610a195780820151818401526020810190506109fe565b83811115610a28576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b610aa68161097f565b8114610ab157600080fd5b50565b610abd816109a9565b8114610ac857600080fd5b5056fea26469706673582212205e456f21ec004dea94617bcd0381428524692df6948a1067115cdd7a5245c61764736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}