{
  "address": "0x13f193d5328d967076c5ED80Be9ed5a79224DdAb",
  "abi": [
    {
      "inputs": [],
      "name": "DAI",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "threecrv",
      "outputs": [
        {
          "internalType": "contract ICurvePool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa70c7c0188f51c7b29fb6d2c4a4e6a5319470b4a75f7f5406fda5c4cbbf2f872",
  "receipt": {
    "to": null,
    "from": "0xb4EfdA6DAf5ef75D08869A0f9C0213278fb43b6C",
    "contractAddress": "0x13f193d5328d967076c5ED80Be9ed5a79224DdAb",
    "transactionIndex": 90,
    "gasUsed": "612920",
    "logsBloom": "0x
    "blockHash": "0x2731259a53609f748869acd1594e20c021744f0d27c7ec1ab70e7e507ad0ea1c",
    "transactionHash": "0xa70c7c0188f51c7b29fb6d2c4a4e6a5319470b4a75f7f5406fda5c4cbbf2f872",
    "logs": [],
    "blockNumber": 13148469,
    "cumulativeGasUsed": "6311872",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "75fe0d763c2785e632d8528bab3d9b24",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DAI\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threecrv\",\"outputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"name(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"if no valid (recent) rate is available, return false else true.\",\"_1\":\"The rate of the requested asset / pair / pool.\"}},\"peekSpot(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"params\":{\"data\":\"Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate.\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle.\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes.\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/flat/3CrvOracleV1.sol\":\"ThreeCrvOracleV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/flat/3CrvOracleV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIXED\\n\\n// File contracts/interfaces/IOracle.sol\\n// License-Identifier: MIT\\npragma solidity >= 0.6.12;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\\n// File contracts/oracles/3CrvOracle.sol\\n// License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\n// Chainlink Aggregator\\n\\ninterface IAggregator {\\n    function latestAnswer() external view returns (int256 answer);\\n}\\n\\ninterface IYearnVault {\\n    function pricePerShare() external view returns (uint256 price);\\n}\\n\\ninterface ICurvePool {\\n    function get_virtual_price() external view returns (uint256 price);\\n}\\n\\ncontract ThreeCrvOracleV1 is IOracle {\\n    ICurvePool constant public threecrv = ICurvePool(0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7);\\n    IAggregator constant public DAI = IAggregator(0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9);\\n    IAggregator constant public USDC = IAggregator(0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6);\\n    IAggregator constant public USDT = IAggregator(0x3E7d1eAB13ad0104d2750B8863b489D65364e32D);\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    // FROM: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/6d97f0919547df11be9443b54af2d90631eaa733/contracts/utils/math/Math.sol\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    // Calculates the lastest exchange rate\\n    // Uses both divide and multiply only for tokens not supported directly by Chainlink, for example MKR/USD\\n    function _get() internal view returns (uint256) {\\n\\n        // As the price should never be negative, the unchecked conversion is acceptable\\n        uint256 minStable = min(uint256(DAI.latestAnswer()), min(uint256(USDC.latestAnswer()), uint256(USDT.latestAnswer())));\\n\\n        uint256 yVCurvePrice = threecrv.get_virtual_price() * minStable;\\n\\n        return 1e44 / yVCurvePrice;\\n    }\\n\\n    // Get the latest exchange rate\\n    /// @inheritdoc IOracle\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the last exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\n        return (true, _get());\\n    }\\n\\n    // Check the current spot exchange rate without any state changes\\n    /// @inheritdoc IOracle\\n    function peekSpot(bytes calldata data) external view override returns (uint256 rate) {\\n        (, rate) = peek(data);\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function name(bytes calldata) public pure override returns (string memory) {\\n        return \\\"Chainlink 3Crv\\\";\\n    }\\n\\n    /// @inheritdoc IOracle\\n    function symbol(bytes calldata) public pure override returns (string memory) {\\n        return \\\"LINK/3crv\\\";\\n    }\\n}\",\"keccak256\":\"0xabc45fd80a53247ea446ff6119b6e335626f29a5db11beb1d46e735a9c0c945d\",\"license\":\"MIXED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a26806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d39bbef011610066578063d39bbef014610122578063d568866c14610152578063d6d7d52514610182578063e0bab4c4146101b3578063eeb8a8d3146101d157610093565b806365f6a6be1461009857806389a30271146100b6578063c54e44eb146100d4578063c699c4d6146100f2575b600080fd5b6100a0610202565b6040516100ad9190610799565b60405180910390f35b6100be61021a565b6040516100cb919061077e565b60405180910390f35b6100dc610232565b6040516100e9919061077e565b60405180910390f35b61010c60048036038101906101079190610649565b61024a565b60405161011991906107b4565b60405180910390f35b61013c60048036038101906101379190610649565b61028a565b60405161014991906107d6565b60405180910390f35b61016c60048036038101906101679190610649565b6102a2565b60405161017991906107b4565b60405180910390f35b61019c60048036038101906101979190610649565b6102e2565b6040516101aa929190610755565b60405180910390f35b6101bb6102fa565b6040516101c8919061077e565b60405180910390f35b6101eb60048036038101906101e69190610649565b610312565b6040516101f9929190610755565b60405180910390f35b73bebc44782c7db0a1a60cb6fe97d0b483032ff1c781565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b733e7d1eab13ad0104d2750b8863b489d65364e32d81565b60606040518060400160405280600981526020017f4c494e4b2f336372760000000000000000000000000000000000000000000000815250905092915050565b60006102968383610312565b90508091505092915050565b60606040518060400160405280600e81526020017f436861696e6c696e6b2033437276000000000000000000000000000000000000815250905092915050565b60008060016102ef61032a565b915091509250929050565b73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee981565b600080600161031f61032a565b915091509250929050565b6000806104f373aed0c38402a5d19df6e4c03f4e2dced6e29c1ee973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038a57600080fd5b505afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c2919061068e565b6104ee738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610457919061068e565b733e7d1eab13ad0104d2750b8863b489d65364e32d73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b157600080fd5b505afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e9919061068e565b6105bc565b6105bc565b905060008173bebc44782c7db0a1a60cb6fe97d0b483032ff1c773ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a91906106b7565b610594919061083e565b90508072047bf19673df52e37f2410011d1000000000006105b5919061080d565b9250505090565b60008183106105cb57816105cd565b825b905092915050565b60008083601f8401126105e757600080fd5b8235905067ffffffffffffffff81111561060057600080fd5b60208301915083600182028301111561061857600080fd5b9250929050565b60008151905061062e816109c2565b92915050565b600081519050610643816109d9565b92915050565b6000806020838503121561065c57600080fd5b600083013567ffffffffffffffff81111561067657600080fd5b610682858286016105d5565b92509250509250929050565b6000602082840312156106a057600080fd5b60006106ae8482850161061f565b91505092915050565b6000602082840312156106c957600080fd5b60006106d784828501610634565b91505092915050565b6106e981610898565b82525050565b6106f8816108d8565b82525050565b610707816108fc565b82525050565b6000610718826107f1565b61072281856107fc565b9350610732818560208601610920565b61073b816109b1565b840191505092915050565b61074f816108ce565b82525050565b600060408201905061076a60008301856106e0565b6107776020830184610746565b9392505050565b600060208201905061079360008301846106ef565b92915050565b60006020820190506107ae60008301846106fe565b92915050565b600060208201905081810360008301526107ce818461070d565b905092915050565b60006020820190506107eb6000830184610746565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610818826108ce565b9150610823836108ce565b92508261083357610832610982565b5b828204905092915050565b6000610849826108ce565b9150610854836108ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561088d5761088c610953565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e3826108ea565b9050919050565b60006108f5826108ae565b9050919050565b60006109078261090e565b9050919050565b6000610919826108ae565b9050919050565b60005b8381101561093e578082015181840152602081019050610923565b8381111561094d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6109cb816108a4565b81146109d657600080fd5b50565b6109e2816108ce565b81146109ed57600080fd5b5056fea2646970667358221220d218a2e3357080fd024d595cf20c1de2b5b75c965720b2f47b20b953245b153464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063d39bbef011610066578063d39bbef014610122578063d568866c14610152578063d6d7d52514610182578063e0bab4c4146101b3578063eeb8a8d3146101d157610093565b806365f6a6be1461009857806389a30271146100b6578063c54e44eb146100d4578063c699c4d6146100f2575b600080fd5b6100a0610202565b6040516100ad9190610799565b60405180910390f35b6100be61021a565b6040516100cb919061077e565b60405180910390f35b6100dc610232565b6040516100e9919061077e565b60405180910390f35b61010c60048036038101906101079190610649565b61024a565b60405161011991906107b4565b60405180910390f35b61013c60048036038101906101379190610649565b61028a565b60405161014991906107d6565b60405180910390f35b61016c60048036038101906101679190610649565b6102a2565b60405161017991906107b4565b60405180910390f35b61019c60048036038101906101979190610649565b6102e2565b6040516101aa929190610755565b60405180910390f35b6101bb6102fa565b6040516101c8919061077e565b60405180910390f35b6101eb60048036038101906101e69190610649565b610312565b6040516101f9929190610755565b60405180910390f35b73bebc44782c7db0a1a60cb6fe97d0b483032ff1c781565b738fffffd4afb6115b954bd326cbe7b4ba576818f681565b733e7d1eab13ad0104d2750b8863b489d65364e32d81565b60606040518060400160405280600981526020017f4c494e4b2f336372760000000000000000000000000000000000000000000000815250905092915050565b60006102968383610312565b90508091505092915050565b60606040518060400160405280600e81526020017f436861696e6c696e6b2033437276000000000000000000000000000000000000815250905092915050565b60008060016102ef61032a565b915091509250929050565b73aed0c38402a5d19df6e4c03f4e2dced6e29c1ee981565b600080600161031f61032a565b915091509250929050565b6000806104f373aed0c38402a5d19df6e4c03f4e2dced6e29c1ee973ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561038a57600080fd5b505afa15801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c2919061068e565b6104ee738fffffd4afb6115b954bd326cbe7b4ba576818f673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610457919061068e565b733e7d1eab13ad0104d2750b8863b489d65364e32d73ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b157600080fd5b505afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e9919061068e565b6105bc565b6105bc565b905060008173bebc44782c7db0a1a60cb6fe97d0b483032ff1c773ffffffffffffffffffffffffffffffffffffffff1663bb7b8b806040518163ffffffff1660e01b815260040160206040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a91906106b7565b610594919061083e565b90508072047bf19673df52e37f2410011d1000000000006105b5919061080d565b9250505090565b60008183106105cb57816105cd565b825b905092915050565b60008083601f8401126105e757600080fd5b8235905067ffffffffffffffff81111561060057600080fd5b60208301915083600182028301111561061857600080fd5b9250929050565b60008151905061062e816109c2565b92915050565b600081519050610643816109d9565b92915050565b6000806020838503121561065c57600080fd5b600083013567ffffffffffffffff81111561067657600080fd5b610682858286016105d5565b92509250509250929050565b6000602082840312156106a057600080fd5b60006106ae8482850161061f565b91505092915050565b6000602082840312156106c957600080fd5b60006106d784828501610634565b91505092915050565b6106e981610898565b82525050565b6106f8816108d8565b82525050565b610707816108fc565b82525050565b6000610718826107f1565b61072281856107fc565b9350610732818560208601610920565b61073b816109b1565b840191505092915050565b61074f816108ce565b82525050565b600060408201905061076a60008301856106e0565b6107776020830184610746565b9392505050565b600060208201905061079360008301846106ef565b92915050565b60006020820190506107ae60008301846106fe565b92915050565b600060208201905081810360008301526107ce818461070d565b905092915050565b60006020820190506107eb6000830184610746565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610818826108ce565b9150610823836108ce565b92508261083357610832610982565b5b828204905092915050565b6000610849826108ce565b9150610854836108ce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561088d5761088c610953565b5b828202905092915050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e3826108ea565b9050919050565b60006108f5826108ae565b9050919050565b60006109078261090e565b9050919050565b6000610919826108ae565b9050919050565b60005b8381101561093e578082015181840152602081019050610923565b8381111561094d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6109cb816108a4565b81146109d657600080fd5b50565b6109e2816108ce565b81146109ed57600080fd5b5056fea2646970667358221220d218a2e3357080fd024d595cf20c1de2b5b75c965720b2f47b20b953245b153464736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "name(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "if no valid (recent) rate is available, return false else true.",
          "_1": "The rate of the requested asset / pair / pool."
        }
      },
      "peekSpot(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "params": {
          "data": "Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
        },
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate."
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle."
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes."
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek()."
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}